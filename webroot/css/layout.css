/**
 * _settings.scss
 *
 * Use Sass variables and custom properties as appropriate, both are possible
 */
/********
 * Typo *
 ********/
/************
 * Measures *
 ************/
/**********
 * Colors *
 **********/
/**********
 * Border *
 **********/
/********************
 * Options/Switches *
 ********************/
/**
 * src/css/libhalma/_libhalma.scss
 *
 * Libhalma: A simple, solid and accessible basic library for css
 *
 * @author Johannes Braun <j.braun@agentur-halma.de>
 * @package libhalma
 * @version 2020-11-09
 */
/**
 * src/css/mixins/_utils.scss
 *
 * Utility mixins and functions
 *
 * @author Johannes Braun <j.braun@agentur-halma.de>
 * @package libhalma
 */
/**
 * strip-unit
 *
 * Returns the unitless number
 * From: https://css-tricks.com/snippets/sass/strip-unit-function/
 *
 * @param number
 * @return number
 */
/**
 * pow
 *
 * Return the number risen to the power of n
 * From: https://css-tricks.com/snippets/sass/power-function/
 *
 * @param number 	The operator
 * @param exp 		The exponent
 * @return number
 */
/**
 * Calculates the sRGB luma of a colour.
 *
 * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/
 *
 * Math nicked from a great Thoughtbot article by Reda Lemeden:
 * http://robots.thoughtbot.com/closer-look-color-lightness
 */
/*
 * Picks a colour from two options based on which one is more visible
 * on the given background colour.
 *
 * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/
 *
 * Usage: color-for-bg($bg-color, $color-1, $color-2)
 */
/*
 * @author Carsten Coull <c.coull@agentur-halma.de>
 *
 * Slope Utilits
 * sets a Graph to use for unit
 *
 * Needs a calc support
 */
/*
 * for fluid type to fit to screen;
 */
/*
 * Sets a fluid Unit between to Values
 *
 * $min-size: Minimum Value
 * $max-size: Maximum Value
 * $min-view: Size at which to use $min-size
 * $max-view: Size at which to use $max-size
 *
 * works best with px Unit
 */
/* Can be used with Custom Proporties */
/**
 * libhalma/_rwd.scss
 *
 * Breakpoints, media queries, responsive webdesign
 * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862
 *
 * @usage: @include for-size(tablet-landscape-up) { ... }
 *				 Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.
 *
 * 				 @include for-size(1200px, up) { ... }
 *				 If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.
 *
 *
 * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>
 * @package libhalma
 */
/**
 * src/css/libhalma/_vertical_rhythm.scss
 *
 * @author Carsten Coull <c.coull@agentur-halma.de>
 * @package libhalma
 */
body {
  position: relative;
}

.debug-base-line-grid {
  background-image: linear-gradient(to bottom, transparent 0, transparent calc(1.5rem), rgba(255, 99, 71, 0.1) calc(1.5rem), rgba(255, 99, 71, 0.1));
  background-size: 100% 3rem;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  pointer-events: none;
  z-index: 32766;
  top: -16px;
}

:root {
  --primary-100: #b9e4d8;
  --primary-200: #9fdac9;
  --primary-300: #82d4bc;
  --primary-400: #61d1af;
  --primary-500: #3ed1a6;
  --primary-600: #20cb97;
  --primary-700: #0cbb88;
  --primary-800: #00a471;
  --primary-900: #00805a;
  --primary: #20cb97;
  --secondary-100: #b2d2db;
  --secondary-200: #99c4d0;
  --secondary-300: #7db7ca;
  --secondary-400: #5cadc7;
  --secondary-500: #38a8c7;
  --secondary-600: #2298b9;
  --secondary-700: #1086a7;
  --secondary-800: #027093;
  --secondary-900: #005571;
  --secondary: #2298b9;
  --foreground-100: hsl(0, 0%, 0%);
  --foreground-200: hsl(0, 0%, 5%);
  --foreground-300: hsl(0, 0%, 10%);
  --foreground-400: hsl(0, 0%, 15%);
  --foreground-500: hsl(0, 0%, 20%);
  --foreground-600: hsl(0, 0%, 25%);
  --foreground-700: hsl(0, 0%, 30%);
  --foreground-800: hsl(0, 0%, 35%);
  --foreground-900: hsl(0, 0%, 40%);
  --foreground: hsl(0, 0%, 15%);
  --background-100: hsl(0, 0%, 100%);
  --background-200: hsl(0, 0%, 95%);
  --background-300: hsl(0, 0%, 90%);
  --background-400: hsl(0, 0%, 85%);
  --background-500: hsl(0, 0%, 80%);
  --background-600: hsl(0, 0%, 75%);
  --background-700: hsl(0, 0%, 70%);
  --background-800: hsl(0, 0%, 65%);
  --background-900: hsl(0, 0%, 60%);
  --background: hsl(0, 0%, 85%);
  --neutral-100: hsl(0, 0%, 70%);
  --neutral-200: hsl(0, 0%, 65%);
  --neutral-300: hsl(0, 0%, 60%);
  --neutral-400: hsl(0, 0%, 55%);
  --neutral-500: hsl(0, 0%, 50%);
  --neutral-600: hsl(0, 0%, 45%);
  --neutral-700: hsl(0, 0%, 40%);
  --neutral-800: hsl(0, 0%, 35%);
  --neutral-900: hsl(0, 0%, 30%);
  --neutral: hsl(0, 0%, 55%);
  --success-100: #99d49b;
  --success-200: #78c77c;
  --success-300: #58b95c;
  --success-400: #43a047;
  --success-500: #317534;
  --success-600: #285f2a;
  --success-700: #225124;
  --success-800: #1c431e;
  --success-900: #132d14;
  --success: #43a047;
  --warning-100: #f4e6bd;
  --warning-200: #efd994;
  --warning-300: #ebcb6a;
  --warning-400: #e7be40;
  --warning-500: #d5a515;
  --warning-600: #bd920e;
  --warning-700: #af8607;
  --warning-800: #a27a00;
  --warning-900: #846300;
  --warning: #e7be40;
  --error-100: #e8bdbc;
  --error-200: #de9a98;
  --error-300: #d47674;
  --error-400: #cc514e;
  --error-500: #b0302d;
  --error-600: #9b2623;
  --error-700: #901d1a;
  --error-800: #841411;
  --error-900: #6d0c0a;
  --error: #cc514e;
  --white: #fff;
  --black: #000;
}

/**
 * src/css/libhalma/_classes.scss
 *
 * Predefined utility classes
 *
 * @author C.Coull <c.coull@agentur-halma.de>
 * @author J. Braun <j.braun@agentur-halma.de>
 * @package libhalma
 * @version 2021-05-27
 */
/**
 * From: EveryLayout
 */
/**
 * From: EveryLayout
 */
/**
 * The Cluster
 *
 * https://every-layout.dev/demos/cluster-ctas/
 *
 * We can use `gap` now on flexbox items, so it gets really easy now :-)
 */
/**
 * The Stack
 *
 * Spacing for vertically stacked blocks
 */
.media-select {
  --font-family: "Manrope", sans-serif;
  --line-height: 1.5;
  --font-weight: 400;
  --font-size: 1rem;
  --margin: 2rem;
  --spacing-100: 0.25rem;
  --spacing-200: 0.5rem;
  --spacing-300: 1rem;
  --spacing-400: 2rem;
  --spacing-500: 4rem;
  --spacing-600: 6rem;
  --spacing-700: 8rem;
  --spacing-800: 10rem;
  --spacing-900: 14rem;
  --border-width: 2px;
  --border-radius: 4px;
  --border-color: currentColor;
  --border-type: solid;
  --border: var(--border-color) var(--border-width) var(--border-type)
  	var(--border-radius);
  --outline-width: 4px;
  --gutter: $spacing;
  --vertical-unit: 1.5rem;
  --outer-bound: 2rem;
  --inner-bound-width: 68rem;
  --outer-bound-width: 86rem;
  --header-height: clamp(5rem, 100vw * 0.0076923077 - -4.8461538462rem, 6.5rem);
  --screen-height: 100vh;
  --spacing: 1rem;
  --typography-spacing-vertical: 1.5rem;
  --block-spacing-vertical: 2rem;
  --block-spacing-horizontal: 1rem;
  --form-element-spacing-vertical: 0.75rem;
  --form-element-spacing-horizontal: 1rem;
  --grid-spacing-vertical: 0;
  --grid-spacing-horizontal: 1rem;
  --nav-element-spacing-vertical: 1rem;
  --nav-element-spacing-horizontal: 0.5rem;
  --nav-link-spacing-vertical: 0.5rem;
  --nav-link-spacing-horizontal: 0.5rem;
  --form-label-font-weight: var(--font-weight);
  --transition: 200ms ease-in-out;
}
@media (max-width: 768px) {
  .media-select {
    --outer-bound: 1rem;
  }
}
.media-select details {
  border: none;
  margin: 0;
  padding: 0;
}
.media-select summary::after {
  display: none;
}
.media-select li {
  margin-left: 2rem;
  position: relative;
}
.media-select li + li {
  margin-top: var(--spacing);
}
.media-select li > details > summary,
.media-select li > svg {
  position: absolute;
  left: -1rem;
  top: 0.75rem;
  transform: translateX(-100%);
}
.media-select svg path {
  stroke: currentColor !important;
}
.media-select ul,
.media-select li {
  list-style: none;
  margin-bottom: 0;
}
.media-select ul::after, .media-select ul::before, .media-select ul::marker,
.media-select li::after,
.media-select li::before,
.media-select li::marker {
  display: none;
}
.media-select label {
  border: var(--border-width) solid var(--primary);
  border-radius: var(--border-radius);
  display: inline-block;
  margin-bottom: 0;
  text-align: left;
  padding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);
  --background-color: transparent;
  --color: var(--primary);
}
.media-select label:is([aria-current], :hover, :active, :focus) {
  --background-color: transparent;
  --color: var(--primary-hover);
}
.media-select input[type=radio] {
  display: none;
}
.media-select input[type=radio]:checked + label {
  background-color: var(--primary);
  color: var(--primary-inverse);
}
.media-select input[type=radio]:disabled + label {
  color: var(--text-color);
  border-color: var(--text-color);
}
.media-select figure {
  display: flex;
  gap: var(--spacing);
  align-items: center;
}
.media-select .meida-image {
  max-width: 6rem;
}

.layout-menu {
  background-color: grey;
  position: fixed;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  z-index: 2000;
  width: -moz-fit-content;
  width: fit-content;
  box-sizing: border-box;
  border-bottom-left-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
  overflow: hidden;
  display: flex;
  gap: var(--spacing, 1rem);
  align-items: center;
  padding: 0;
}
.layout-menu p {
  padding: 0;
  margin: 0;
}
.layout-menu a:not(.layout-button) {
  color: #61d1af;
}
.layout-menu .layout-button, .layout-menu dialog button, dialog .layout-menu button {
  padding-block: 0.25rem;
  min-height: 100%;
}

.layout-loading {
  cursor: wait;
  pointer-events: none;
  opacity: 0.8;
}

.layout-container, .layout-element, .layout-slot {
  width: 100%;
  position: relative;
}

.layout-element {
  position: relative;
  border: solid 4px transparent;
  transition: 150ms border-color;
}
.layout-element:hover {
  border: solid 4px #61d1af;
}
.layout-element:hover > .layout-handle {
  opacity: 1;
}
.layout-element:hover .select-media {
  opacity: 1;
}
.layout-element .ce-block__content,
.layout-element .ce-toolbar__content {
  max-width: 100%;
}

.layout-handle {
  opacity: 0;
  position: absolute;
  z-index: 10;
  top: 0;
  right: 1rem;
  left: 1rem;
  transition: 150ms opacity;
  display: flex;
  gap: 2rem;
  justify-content: space-between;
  pointer-events: none;
}
.layout-handle > * {
  pointer-events: all;
}
.layout-handle__actions :first-child {
  border-bottom-left-radius: 0.5rem;
}
.layout-handle__actions :last-child {
  border-bottom-right-radius: 0.5rem;
}

.layout-button, dialog button {
  --font-family: "Manrope", sans-serif;
  --line-height: 1.5;
  --font-weight: 400;
  --font-size: 1rem;
  --margin: 2rem;
  --spacing-100: 0.25rem;
  --spacing-200: 0.5rem;
  --spacing-300: 1rem;
  --spacing-400: 2rem;
  --spacing-500: 4rem;
  --spacing-600: 6rem;
  --spacing-700: 8rem;
  --spacing-800: 10rem;
  --spacing-900: 14rem;
  --border-width: 2px;
  --border-radius: 4px;
  --border-color: currentColor;
  --border-type: solid;
  --border: var(--border-color) var(--border-width) var(--border-type)
  	var(--border-radius);
  --outline-width: 4px;
  --gutter: $spacing;
  --vertical-unit: 1.5rem;
  --outer-bound: 2rem;
  --inner-bound-width: 68rem;
  --outer-bound-width: 86rem;
  --header-height: clamp(5rem, 100vw * 0.0076923077 - -4.8461538462rem, 6.5rem);
  --screen-height: 100vh;
  --spacing: 1rem;
  --typography-spacing-vertical: 1.5rem;
  --block-spacing-vertical: 2rem;
  --block-spacing-horizontal: 1rem;
  --form-element-spacing-vertical: 0.75rem;
  --form-element-spacing-horizontal: 1rem;
  --grid-spacing-vertical: 0;
  --grid-spacing-horizontal: 1rem;
  --nav-element-spacing-vertical: 1rem;
  --nav-element-spacing-horizontal: 0.5rem;
  --nav-link-spacing-vertical: 0.5rem;
  --nav-link-spacing-horizontal: 0.5rem;
  --form-label-font-weight: var(--font-weight);
  --transition: 200ms ease-in-out;
  display: inline-flex;
  align-self: stretch;
  align-items: center;
  background-color: #61d1af;
  color: #fff;
  font-weight: 800;
  text-decoration: none;
  border: none;
  padding: 0.5rem 1rem;
  cursor: pointer;
}
@media (max-width: 768px) {
  .layout-button, dialog button {
    --outer-bound: 1rem;
  }
}
.layout-button svg, dialog button svg {
  height: 24px;
  width: auto;
  vertical-align: middle;
}
.layout-button:focus, dialog button:focus, .layout-button:hover, dialog button:hover {
  background-color: #3ed1a6;
}
.layout-button--new {
  border-radius: 0.5rem;
  left: 50%;
}
.layout-container > .layout-button--new {
  position: absolute;
  z-index: 12;
  bottom: 4px;
  transform: translate(-50%, 100%);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.layout-container > .layout-button--new::before {
  content: "";
  position: absolute;
  top: 0;
  z-index: 12;
  background-color: #61d1af;
  height: 4px;
  width: 200px;
  left: 50%;
  transform: translateX(-50%);
  border-radius: 0.5rem;
}
.layout-slot > .layout-button--new {
  display: none;
  position: relative;
  transform: translateX(-50%);
  margin: 2rem 0;
}
.layout-slot > .layout-button--new:only-child {
  display: inherit;
}

.rhino-select {
  --font-family: "Manrope", sans-serif;
  --line-height: 1.5;
  --font-weight: 400;
  --font-size: 1rem;
  --margin: 2rem;
  --spacing-100: 0.25rem;
  --spacing-200: 0.5rem;
  --spacing-300: 1rem;
  --spacing-400: 2rem;
  --spacing-500: 4rem;
  --spacing-600: 6rem;
  --spacing-700: 8rem;
  --spacing-800: 10rem;
  --spacing-900: 14rem;
  --border-width: 2px;
  --border-radius: 4px;
  --border-color: currentColor;
  --border-type: solid;
  --border: var(--border-color) var(--border-width) var(--border-type)
  	var(--border-radius);
  --outline-width: 4px;
  --gutter: $spacing;
  --vertical-unit: 1.5rem;
  --outer-bound: 2rem;
  --inner-bound-width: 68rem;
  --outer-bound-width: 86rem;
  --header-height: clamp(5rem, 100vw * 0.0076923077 - -4.8461538462rem, 6.5rem);
  --screen-height: 100vh;
  --spacing: 1rem;
  --typography-spacing-vertical: 1.5rem;
  --block-spacing-vertical: 2rem;
  --block-spacing-horizontal: 1rem;
  --form-element-spacing-vertical: 0.75rem;
  --form-element-spacing-horizontal: 1rem;
  --grid-spacing-vertical: 0;
  --grid-spacing-horizontal: 1rem;
  --nav-element-spacing-vertical: 1rem;
  --nav-element-spacing-horizontal: 0.5rem;
  --nav-link-spacing-vertical: 0.5rem;
  --nav-link-spacing-horizontal: 0.5rem;
  --form-label-font-weight: var(--font-weight);
  --transition: 200ms ease-in-out;
  display: inline-block;
  color: hsl(0, 0%, 40%);
  font-weight: 600;
  appearance: none;
  padding-right: 2rem;
  padding-left: 0.5rem;
  padding-block: 0rem;
  text-decoration: none;
  margin-top: -4px;
  border: #61d1af solid 4px;
  border-radius: 0 0 0.5rem 0.5rem;
  cursor: pointer;
  --icon-chevron: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(102, 102, 102)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-image: var(--icon-chevron);
  background-position: center right 0.75rem;
  background-size: 1rem auto;
  background-repeat: no-repeat;
}
@media (max-width: 768px) {
  .rhino-select {
    --outer-bound: 1rem;
  }
}

.select-media {
  opacity: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

dialog {
  --font-family: "Manrope", sans-serif;
  --line-height: 1.5;
  --font-weight: 400;
  --font-size: 1rem;
  --margin: 2rem;
  --spacing-100: 0.25rem;
  --spacing-200: 0.5rem;
  --spacing-300: 1rem;
  --spacing-400: 2rem;
  --spacing-500: 4rem;
  --spacing-600: 6rem;
  --spacing-700: 8rem;
  --spacing-800: 10rem;
  --spacing-900: 14rem;
  --border-width: 2px;
  --border-radius: 4px;
  --border-color: currentColor;
  --border-type: solid;
  --border: var(--border-color) var(--border-width) var(--border-type)
  	var(--border-radius);
  --outline-width: 4px;
  --gutter: $spacing;
  --vertical-unit: 1.5rem;
  --outer-bound: 2rem;
  --inner-bound-width: 68rem;
  --outer-bound-width: 86rem;
  --header-height: clamp(5rem, 100vw * 0.0076923077 - -4.8461538462rem, 6.5rem);
  --screen-height: 100vh;
  --spacing: 1rem;
  --typography-spacing-vertical: 1.5rem;
  --block-spacing-vertical: 2rem;
  --block-spacing-horizontal: 1rem;
  --form-element-spacing-vertical: 0.75rem;
  --form-element-spacing-horizontal: 1rem;
  --grid-spacing-vertical: 0;
  --grid-spacing-horizontal: 1rem;
  --nav-element-spacing-vertical: 1rem;
  --nav-element-spacing-horizontal: 0.5rem;
  --nav-link-spacing-vertical: 0.5rem;
  --nav-link-spacing-horizontal: 0.5rem;
  --form-label-font-weight: var(--font-weight);
  --transition: 200ms ease-in-out;
  width: 100%;
  max-width: 52rem;
  margin: auto;
  border: none;
}
@media (max-width: 768px) {
  dialog {
    --outer-bound: 1rem;
  }
}
@media (min-width: 576px) {
  dialog {
    width: calc(100% - var(--outer-bound) * 2);
  }
}
dialog::backdrop {
  --modal-overlay-background-color: rgba(0, 0, 0, 0.2);
  background-color: var(--modal-overlay-background-color);
  --modal-overlay-backdrop-filter: blur(0.25rem);
  -webkit-backdrop-filter: var(--modal-overlay-backdrop-filter);
  backdrop-filter: var(--modal-overlay-backdrop-filter);
}
dialog .close,
dialog [aria-label=close] {
  position: sticky;
  display: block;
  right: 0;
  margin-left: auto;
  top: 0;
  width: 1rem;
  height: 1rem;
  background-image: var(--icon-close);
  background-position: center;
  background-size: auto 1rem;
  background-repeat: no-repeat;
  opacity: 0.5;
  padding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);
  margin-bottom: var(--spacing);
  --background-color: transparent;
  background-color: var(--background-color);
  --border-color: var(--contrast);
  border: var(--border-width) solid var(--border-color);
}
dialog .close:focus, dialog .close:hover,
dialog [aria-label=close]:focus,
dialog [aria-label=close]:hover {
  --box-shadow: var(--button-hover-box-shadow, 0 0 0 rgba(0, 0, 0, 0)), 0 0 0 var(--outline-width) var(--contrast-focus);
  --border-color: var(--contrast-hover);
  --color: var(--contrast-hover);
  --background-color: transparent;
  box-shadow: var(--box-shadow);
}
dialog > article {
  padding: var(--block-spacing-vertical) var(--block-spacing-horizontal);
  border-radius: var(--border-radius);
  background: var(--card-background-color);
  box-shadow: var(--card-box-shadow);
}
dialog > article > footer {
  border-top: var(--border-width) solid var(--card-border-color);
  border-bottom-right-radius: var(--border-radius);
  border-bottom-left-radius: var(--border-radius);
  border-top: var(--border-width) solid var(--card-border-color);
  border-bottom-right-radius: var(--border-radius);
  border-bottom-left-radius: var(--border-radius);
  padding: calc(var(--block-spacing-vertical) * 0.66) var(--block-spacing-horizontal);
  background-color: var(--card-sectionning-background-color);
  margin-top: var(--block-spacing-vertical);
  margin-bottom: calc(var(--block-spacing-vertical) * -1);
  margin-right: calc(var(--block-spacing-horizontal) * -1);
  margin-left: calc(var(--block-spacing-horizontal) * -1);
  gap: 0.5rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
}
dialog > article main {
  min-height: 12rem;
  --border-color: var(--muted-color);
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  padding: var(--spacing) var(--form-element-spacing-horizontal);
}
.editor {
  background: #f6f6f6;
  color: #333;
  border-radius: 0.5rem;
  padding: 1rem 1rem 1rem 4rem;
}

.mark {
  outline: tomato 8px dotted;
}/*# sourceMappingURL=layout.css.map */
