{"version":3,"sources":["settings.scss","base_theme/library/_index.scss","base_theme/library/utils.scss","base_theme/library/rwd.scss","base_theme/library/type-setting.scss","layout.css","base_theme/library/colors.scss","base_theme/library/classes.scss","components/media-select.scss","base_theme/theme/measurements.scss","layout.scss"],"names":[],"mappings":"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","file":"layout.css","sourcesContent":["/**\n * _settings.scss\n *\n * Use Sass variables and custom properties as appropriate, both are possible\n */\n\n/********\n * Typo *\n ********/\n\n@use \"sass:map\";\n@use \"sass:color\";\n@use \"sass:math\";\n// @use \"swu\" as *; // use to create swu theme\n\n$use-type-scale: false;\n$vertical-unit: 1.5rem;\n$modular-scale-ratio: 1.125;\n\n$font-sizes: (\n    100: 0.8,\n    200: 1,\n    300: 1.125,\n    400: 1.2,\n    500: 1.4,\n    600: 1.75,\n    700: 2.1,\n    800: 2.8,\n    900: 3.2,\n);\n\n/************\n * Measures *\n ************/\n$min-header-height: 5rem;\n$max-header-height: 6.5rem;\n\n$inner-bound-width: 68rem;\n$outer-bound-width: 86rem;\n\n$min-supported-screen-width: 320px;\n$max-supported-screen-width: 3440px;\n\n$spacing: 1rem;\n\n$spacings: (\n    100: $spacing * 0.25,\n    200: $spacing * 0.5,\n    300: $spacing,\n    400: $spacing * 2,\n    500: $spacing * 4,\n    600: $spacing * 6,\n    700: $spacing * 8,\n    800: $spacing * 10,\n    900: $spacing * 14,\n);\n\n/**********\n * Colors *\n **********/\n\n$colors: (\n   \tprimary: hsl(162, 68%, 58%),\n\tsecondary: hsl(194, 53%, 55%),\n\tforeground: (\n\t\t100: hsl(0, 0%, 0%),\n\t\t200: hsl(0, 0%, 5%),\n\t\t300: hsl(0, 0%, 10%),\n\t\t400: hsl(0, 0%, 15%),\n\t\t500: hsl(0, 0%, 20%),\n\t\t600: hsl(0, 0%, 25%),\n\t\t700: hsl(0, 0%, 30%),\n\t\t800: hsl(0, 0%, 35%),\n\t\t900: hsl(0, 0%, 40%),\n\t),\n\tbackground: (\n\t\t100: hsl(0, 0%, 100%),\n\t\t200: hsl(0, 0%, 95%),\n\t\t300: hsl(0, 0%, 90%),\n\t\t400: hsl(0, 0%, 85%),\n\t\t500: hsl(0, 0%, 80%),\n\t\t600: hsl(0, 0%, 75%),\n\t\t700: hsl(0, 0%, 70%),\n\t\t800: hsl(0, 0%, 65%),\n\t\t900: hsl(0, 0%, 60%),\n\t),\n\tneutral: (\n\t\t100: hsl(0, 0%, 70%),\n\t\t200: hsl(0, 0%, 65%),\n\t\t300: hsl(0, 0%, 60%),\n\t\t400: hsl(0, 0%, 55%),\n\t\t500: hsl(0, 0%, 50%),\n\t\t600: hsl(0, 0%, 45%),\n\t\t700: hsl(0, 0%, 40%),\n\t\t800: hsl(0, 0%, 35%),\n\t\t900: hsl(0, 0%, 30%),\n\t),\n\tsuccess: (\n\t\t100: #99d49b,\n\t\t200: #78c77c,\n\t\t300: #58b95c,\n\t\t400: #43a047,\n\t\t500: #317534,\n\t\t600: #285f2a,\n\t\t700: #225124,\n\t\t800: #1c431e,\n\t\t900: #132d14,\n\t),\n\twarning: (\n\t\t100: #f4e6bd,\n\t\t200: #efd994,\n\t\t300: #ebcb6a,\n\t\t400: #e7be40,\n\t\t500: #d5a515,\n\t\t600: #bd920e,\n\t\t700: #af8607,\n\t\t800: #a27a00,\n\t\t900: #846300,\n\t),\n\terror: (\n\t\t100: #e8bdbc,\n\t\t200: #de9a98,\n\t\t300: #d47674,\n\t\t400: #cc514e,\n\t\t500: #b0302d,\n\t\t600: #9b2623,\n\t\t700: #901d1a,\n\t\t800: #841411,\n\t\t900: #6d0c0a,\n\t),\n\tprimary-shade: 600, \n\tsecondary-shade: 600,\n\tforeground-shade: 400,\n\tbackground-shade: 400,\n\tneutral-shade: 400,\n\tsuccess-shade: 400,\n\twarning-shade: 400,\n\terror-shade: 400,\n);\n\n@function color-map($name, $color) {\n    $min-color: color.adjust($color, $lightness: -40%);\n    $max-color: color.adjust($color, $lightness: 30%);\n    $primary-colors: ();\n\n    @for $i from 1 through 9 {\n        $key: $i * 100;\n        $weight: $i * 10%;\n\n        $color: color.mix($min-color, $max-color, $weight);\n        $primary-colors: map.set(\n            $primary-colors,\n            $key,\n            color.adjust($color, $saturation: $weight - 10)\n        );\n    }\n\n    @return map.set($colors, $name, $primary-colors);\n}\n\n$colors: color-map(\"primary\", map.get($colors, \"primary\"));\n$colors: color-map(\"secondary\", map.get($colors, \"secondary\"));\n\n$default-colors: $colors !default;\n\n$black: #000;\n$white: #fff;\n\n/**********\n * Border *\n **********/\n\n$border: (\n    width: 2px,\n    radius: 4px,\n    color: currentColor,\n    type: solid,\n);\n\n$outline: (\n    width: 4px,\n);\n\n/********************\n * Options/Switches *\n ********************/\n$debug-base-line-grid: false;\n\n// body-text in full-width containers aligns with outer-bound\n$full-width-fix: true;\n\n// header collapses on scroll-down\n$collapsable-header: true;\n\n// subtracts header height from screen-heighht\n$substract-header-height: false;\n\n// fade in elements when page has loaded\n$fade-in-transition: false;\n\n// loading screen type [spinner, dots, bars]\n$loader: \"spinner\";\n\n// sets the color for header and hero to contrast-color\n$start-dark-background: false;\n\n// sets the style for the navbar [default, folding]\n$nav-style: \"default\";\n\n// Toggle wether all ul & ol elements will recive an Overwrite\n$list-reset: false;\n\n// --- pico ---\n\n// Theme color\n$theme-color-primary: \"custom-primary\"; // amber, azure, blue, cyan, fuchsia, green, grey, indigo, jade, lime, orange, pink, pumpkin, purple, red, sand, slate, violet, yellow, zinc\n$theme-color-secondary: \"custom-secondary\"; // amber, azure, blue, cyan, fuchsia, green, grey, indigo, jade, lime, orange, pink, pumpkin, purple, red, sand, slate, violet, yellow, zinc\n$theme-color-contrast: \"default-contrast\"; // amber, azure, blue, cyan, fuchsia, green, grey, indigo, jade, lime, orange, pink, pumpkin, purple, red, sand, slate, violet, yellow, zinc\n\n// Prefix for CSS variables\n$css-var-prefix: \"--\"; // Must start with \"--\", change to \"--pico-\" for Namespacing\n\n// Define the root element used to target <header>, <main>, <footer>\n// with $enable-semantic-container and $enable-responsive-spacings\n$semantic-root-element: \"body\";\n\n// Enable <header>, <main>, <footer> inside $semantic-root-element as containers\n$enable-semantic-container: true;\n\n// Enable a centered viewport for <header>, <main>, <footer> inside $semantic-root-element\n// Fluid layout if disabled\n$enable-viewport: true;\n\n// Enable responsive spacings for <header>, <main>, <footer>, <section>, <article>\n// Fixed spacings by default\n$enable-responsive-spacings: false;\n\n// Enable responsive typography\n// Fixed root element size (rem) if disabled\n$enable-responsive-typography: false;\n\n// Enable .classes\n// .classless version if disabled\n$enable-classes: true;\n\n// Enable transitions\n$enable-transitions: true;\n\n// Enable overriding with !important\n$enable-important: true;\n\n// Optional parent selector\n// If defined, all HTML tags are wrapped with this selector\n// :root is not wrapped\n$parent-selector: \"\";\n\n// Breakpoints, viewports and root font size\n$breakpoints: (\n    // Small (landscape phones)\n    // Font size: 17px\n    sm:\n        (\n            breakpoint: 576px,\n            viewport: 510px,\n            root-font-size: 100%,\n        ),\n\n    // Medium (tablets)\n    // Font size: 18px\n    md:\n        (\n            breakpoint: 768px,\n            viewport: 700px,\n            root-font-size: 100%,\n        ),\n\n    // Large\n    // Font size: 19px\n    lg:\n        (\n            breakpoint: 1024px,\n            viewport: 950px,\n            root-font-size: 100%,\n        ),\n\n    // Extra large\n    // Font size: 20px\n    xl:\n        (\n            breakpoint: 1280px,\n            viewport: 1200px,\n            root-font-size: 100%,\n        ),\n\n    // Extra extra large\n    // Font size: 21px\n    xxl:\n        (\n            breakpoint: 1536px,\n            viewport: 1450px,\n            root-font-size: 100%,\n        )\n);\n\n// Modules to export\n$modules: (\n    // Theme\n    \"themes/default\": true,\n\n    // Layout\n    \"layout/document\": true,\n    \"layout/landmarks\": false,\n    \"layout/container\": false,\n    \"layout/section\": true,\n    \"layout/grid\": true,\n    \"layout/overflow-auto\": true,\n\n    // Content\n    \"content/link\": true,\n    \"content/typography\": true,\n    \"content/embedded\": true,\n    \"content/button\": true,\n    \"content/table\": true,\n    \"content/code\": true,\n    \"content/figure\": true,\n    \"content/miscs\": true,\n\n    // Forms\n    \"forms/basics\": true,\n    \"forms/checkbox-radio-switch\": true,\n    \"forms/input-color\": true,\n    \"forms/input-date\": true,\n    \"forms/input-file\": true,\n    \"forms/input-range\": true,\n    \"forms/input-search\": true,\n\n    // Components\n    \"components/accordion\": true,\n    \"components/card\": true,\n    \"components/dropdown\": true,\n    \"components/group\": true,\n    \"components/loading\": true,\n    \"components/modal\": false,\n    \"components/nav\": true,\n    \"components/progress\": true,\n    \"components/tooltip\": true,\n\n    // Utilities\n    \"utilities/accessibility\": true,\n    \"utilities/reduce-motion\": true\n);\n","/**\n * src/css/libhalma/_libhalma.scss\n *\n * Libhalma: A simple, solid and accessible basic library for css\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n\n// Edit as needed\n\n@forward\"utils\";\n\n@forward \"rwd\";\n\n@forward \"type-setting\";\n\n@forward \"colors\";\n\n@forward \"classes\";\n","@use \"sass:math\";\n/**\n * src/css/mixins/_utils.scss\n *\n * Utility mixins and functions\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n\n/**\n * strip-unit\n *\n * Returns the unitless number\n * From: https://css-tricks.com/snippets/sass/strip-unit-function/\n *\n * @param number\n * @return number\n */\n@function strip-unit ($number) {\n\t@if type-of ($number) == 'number' and not unitless ($number) {\n\t\t@return math.div($number, ($number * 0 + 1));\n\t}\n\t@return $number;\n}\n\n\n\n/**\n * pow\n *\n * Return the number risen to the power of n\n * From: https://css-tricks.com/snippets/sass/power-function/\n *\n * @param number \tThe operator\n * @param exp \t\tThe exponent\n * @return number\n */\n@function pow ($number, $exp) {\n\t$val: 1;\n\t@if $exp > 0 {\n\t\t@for $i from 1 through $exp {\n\t\t\t$val: $val * $number;\n\t\t}\n\t}\n\t@return $val;\n}\n\n/**\n * Calculates the sRGB luma of a colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Math nicked from a great Thoughtbot article by Reda Lemeden:\n * http://robots.thoughtbot.com/closer-look-color-lightness\n */\n\n@function luma($c) {\n\t$-local-red: red(rgba($c, 1));\n\t$-local-green: green(rgba($c, 1));\n\t$-local-blue: blue(rgba($c, 1));\n\n\t@return math.div((0.2126 * $-local-red  + 0.7152 * $-local-green + 0.0722 * $-local-blue), 255);\n}\n\n\n/*\n * Picks a colour from two options based on which one is more visible\n * on the given background colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Usage: color-for-bg($bg-color, $color-1, $color-2)\n */\n\n@function color-for-bg($bg, $c1, $c2) {\n\t$bg-luma: luma($bg);\n\t$c1-luma: luma($c1);\n\t$c2-luma: luma($c2);\n\n\t$c1-diff: abs($bg-luma - $c1-luma);\n\t$c2-diff: abs($bg-luma - $c2-luma);\n\n\t@if $c1-diff > $c2-diff {\n\t\t@return $c1;\n\t}\n\t@else {\n\t\t@return $c2;\n\t}\n}\n\n// Output color in RGB format\n@function to-rgb($color) {\n\t@return unquote(\"rgb(#{red($color)}, #{green($color)}, #{blue($color)})\");\n}\n\n@function display-rgb($color) {\n\t@return to-rgb($color);\n}\n\n// Generate a shadow layer\n@function shadow-layer($elevation, $blur, $opacity, $color) {\n  @return #{($elevation * 0.5)} #{$elevation} #{$blur} #{rgba($color, $opacity)};\n}\n\n// Generate a shadow with 7 layers\n@function shadow($color) {\n  $box-shadow-elevation: 1rem;\n  $box-shadow-blur-strengh: 6rem;\n  $box-shadow-opacity: 0.06;\n\n  @return shadow-layer(\n      $box-shadow-elevation * 0.029,\n      $box-shadow-blur-strengh * 0.029,\n      $box-shadow-opacity * 0.283,\n      $color\n    ),\n    shadow-layer(\n      $box-shadow-elevation * 0.067,\n      $box-shadow-blur-strengh * 0.067,\n      $box-shadow-opacity * 0.4,\n      $color\n    ),\n    shadow-layer(\n      $box-shadow-elevation * 0.125,\n      $box-shadow-blur-strengh * 0.125,\n      $box-shadow-opacity * 0.5,\n      $color\n    ),\n    shadow-layer(\n      $box-shadow-elevation * 0.225,\n      $box-shadow-blur-strengh * 0.225,\n      $box-shadow-opacity * 0.6,\n      $color\n    ),\n    shadow-layer(\n      $box-shadow-elevation * 0.417,\n      $box-shadow-blur-strengh * 0.417,\n      $box-shadow-opacity * 0.717,\n      $color\n    ),\n    shadow-layer($box-shadow-elevation, $box-shadow-blur-strengh, $box-shadow-opacity, $color),\n    0 0 0 0.0625rem #{rgba($color, ($box-shadow-opacity * 0.25))};\n}\n\n\n/*\n * @author Carsten Coull <c.coull@agentur-halma.de>\n *\n * Slope Utilits\n * sets a Graph to use for unit\n *\n * Needs a calc support\n */\n\n/*\n * for fluid type to fit to screen;\n */\n@mixin slope-type($slope, $offset: 1rem) {\n\tfont-size: $offset * (1 + $slope);\n\tfont-size: calc(#{slope-size($slope, $offset)});\n\tline-height: 1em;\n\n\t@include for-size($m) {\n\t\tfont-size: $offset * (2 + $slope);\n\t\tfont-size: calc(#{slope-size($slope, $offset)});\n\t}\n\tline-height: 1em;\n}\n\n@function slope($slope, $offset: 1rem) {\n\t@return (#{$slope} *  100vw + #{$offset});\n}\n\n/*\n * Sets a fluid Unit between to Values\n *\n * $min-size: Minimum Value\n * $max-size: Maximum Value\n * $min-view: Size at which to use $min-size\n * $max-view: Size at which to use $max-size\n *\n * works best with px Unit\n */\n\n@function slope-minmax($min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\t$slope: math.div(($max-size - $min-size), ($max-view - $min-view));\n\t$offset: ($slope * $min-view) - $min-size;\n\t@return calc(#{100 * $slope}vw + #{$offset * -1});\n}\n\n@mixin slope-type-minmax ($min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\tfont-size: $min-size;\n\tline-height: 1.125em;\n\t// margin-bottom: 1.125em;\n\n\t@media (min-width: $min-view) {\n\t\tfont-size: calc(#{slope-minmax($min-size, $max-size, $min-view, $max-view)});\n\t}\n\n\t@media (min-width: $max-view) {\n\t\tfont-size: $max-size;\n\t}\n}\n\n/* Can be used with Custom Proporties */\n@mixin slope-property-minmax ($property, $min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\t#{$property}: $min-size;\n\n\t@media (min-width: $min-view) {\n\t\t#{$property}: calc(#{slope-minmax($min-size, $max-size, $min-view, $max-view)});\n\t}\n\n\t@media (min-width: $max-view) {\n\t\t#{$property}: $max-size;\n\t}\n}\n\n@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {\n\t@each $property in $properties {\n\t\t#{$property}: $min-value;\n\t}\n\n\t@media (min-width: $min-vw) {\n\t\t@each $property in $properties {\n\t\t\t#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});\n\t\t}\n\t}\n\n\t@media (min-width: $max-vw) {\n\t\t@each $property in $properties {\n\t\t\t#{$property}: $max-value;\n\t\t}\n\t}\n}\n\n\n@function rem-to-px($rem) {\n\t@return (strip-unit($rem) * 16) * 1px;\n}\n\n@function px-to-rem($px) {\n\t@return math.div(strip-unit($px), 16) * 1rem;\n}\n\n@function slope-rem-minmax($min-size: 1rem, $max-size: 7.5rem, $min-view: 320px, $max-view: 1920px) {\n\t$slope: math.div(($max-size - $min-size), strip-unit(px-to-rem($max-view) - px-to-rem($min-view)));\n\t$offset: strip-unit($slope * px-to-rem($min-view)) - $min-size;\n\n\t@return clamp(#{$min-size}, (100vw * #{strip-unit($slope)}) - #{$offset}, #{$max-size});\n}\n\n@mixin fixed-ratio ($width, $height) {\n\tdisplay: block;\n\tposition: relative;\n\tmax-width: 100%;\n\t\n\t&::after {\n\t\tcontent: '';\n\t\theight: 0;\n\t\tpadding-bottom: math.div( $height, $width ) * 100%;\n\t\tdisplay: block;\n\t}\n\t\n\t& > *:first-child {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t}\n\n\t@supports(aspect-ratio: 1 / 1) {\n\t\taspect-ratio: math.div( $width, $height );\n\n\t\t&::after {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t& > *:first-child {\n\t\t\tposition: static;\n\t\t}\n\t}\n}\n\n@mixin position ($type, $top: 0, $right: 0, $bottom: 0, $left: 0) {\n\tposition: $type;\n\ttop: $top;\n\tright: $right;\n\tbottom: $bottom;\n\tleft: $left;\n}","/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n\n@use 'sass:map';\n@use 'settings' as *;\n\n@mixin for-size($size, $direction: false) {\n\t$notFound: true;\n\n\t@if $direction {\n\t\t@if $direction == 'up' {\n\t\t\t$notFound: false;\n\t\t\t@media (min-width: $size) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if $direction == 'down' {\n\t\t\t$notFound: false;\n\t\t\t@media (max-width: $size) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t} @else {\n\t\t@each $breakpoint, $width in $breakpoints {\n\t\t\t@if $size == #{$breakpoint}-up {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (min-width: #{map.get($width, 'breakpoint')}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t} @else if $size == #{$breakpoint}-down {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (max-width: #{map.get($width, 'breakpoint')}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t} @else if $size == $breakpoint {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (max-width: #{map.get($width, 'breakpoint') - 1}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@if $notFound {\n\t\t@error \"Breakpoint: no width for #{$size} devined\";\n\t}\n}\n","/**\n * src/css/libhalma/_vertical_rhythm.scss\n *\n * @author Carsten Coull <c.coull@agentur-halma.de>\n * @package libhalma\n */\n@use \"sass:math\";\n@use \"sass:map\";\n@use 'settings' as *;\n\n$font-sizes: (\n\t100: 0.5,\n\t200: 0.8,\n\t400: 1,\n\t500: 1.2,\n\t600: 1.4,\n\t700: 1.75,\n\t800: 2.1,\n\t900: 3.8,\n) !default;\n\n@if $use-type-scale {\n\n\t$weight: 100;\n\t$font-sizes: ();\n\n\t@for $weight from 1 to 10 {\n\t\t$delta: $weight - 4;\n\t\t$value: math.pow($modular-scale-ratio, $delta);\n\t\t$font-sizes: map-merge($font-sizes, ($weight * 100: $value));\n\t}\n}\n\n\n@mixin type-setting($level: 400, $margin-bottom: 'none') {\n\n\t$font-size: map-get($font-sizes, $level);\n\n\t@if type-of($font-size) != 'number' {\n\t\t@debug \"Could not get font-size vor level \" + $level;\n\t}\n\n\t// Strip unit\n\t$vu: math.div($vertical-unit, $vertical-unit * 0 + 1);\n\t$line-height: math.div($vu, $font-size);\n\n\t// Make sure line-height is at least 1 times the vertical unit\n\t@if $line-height > 0 { // prevent endless loop if somehow line-height is zero or negative\n\t\t@while $line-height < 1 {\n\t\t\t$line-height: $line-height * 1.5; // Steps up half a vertical unit at each step\n\t\t}\n\t\t// $line-height: math.div($line-height, 1.41421);\n\t}\n\n\tfont-size: $font-size + rem;\n\tline-height: $line-height + em;\n\n\t@if $margin-bottom != 'none' {\n\t\tmargin-bottom: ($line-height * $margin-bottom) + rem;\n\t}\n}\n\n\n$debug-base-line-grid: true;\n$visual-base-line-grid-offset: -16px !default;\n$visual-base-line-grid-above: true !default;\n\n// Visual baseline grid for debugging (\"Grundlinienraster\")\n@if $debug-base-line-grid {\n\tbody {\n\t\tposition: relative;\n\t}\n\t.debug-base-line-grid {\n\t\tbackground-image: linear-gradient(\n\t\t\tto bottom,\n\t\t\ttransparent 0,\n\t\t\ttransparent calc(#{$vertical-unit}),\n\t\t\trgba(tomato, 0.1) calc(#{$vertical-unit}),\n\t\t\trgba(tomato, 0.1)\n\t\t);\n\t\tbackground-size: 100% (2 * $vertical-unit);\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tpointer-events: none;\n\t\t@if $visual-base-line-grid-above {\n\t\t\tz-index: 32766;\n\t\t}\n\t\t@else {\n\t\t\tz-index: 0;\n\t\t}\n\t\ttop: $visual-base-line-grid-offset;\n\t}\n}\n\n","/**\n * _settings.scss\n *\n * Use Sass variables and custom properties as appropriate, both are possible\n */\n/********\n * Typo *\n ********/\n/************\n * Measures *\n ************/\n/**********\n * Colors *\n **********/\n/**********\n * Border *\n **********/\n/********************\n * Options/Switches *\n ********************/\n/**\n * src/css/libhalma/_libhalma.scss\n *\n * Libhalma: A simple, solid and accessible basic library for css\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n/**\n * src/css/mixins/_utils.scss\n *\n * Utility mixins and functions\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n/**\n * strip-unit\n *\n * Returns the unitless number\n * From: https://css-tricks.com/snippets/sass/strip-unit-function/\n *\n * @param number\n * @return number\n */\n/**\n * pow\n *\n * Return the number risen to the power of n\n * From: https://css-tricks.com/snippets/sass/power-function/\n *\n * @param number \tThe operator\n * @param exp \t\tThe exponent\n * @return number\n */\n/**\n * Calculates the sRGB luma of a colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Math nicked from a great Thoughtbot article by Reda Lemeden:\n * http://robots.thoughtbot.com/closer-look-color-lightness\n */\n/*\n * Picks a colour from two options based on which one is more visible\n * on the given background colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Usage: color-for-bg($bg-color, $color-1, $color-2)\n */\n/*\n * @author Carsten Coull <c.coull@agentur-halma.de>\n *\n * Slope Utilits\n * sets a Graph to use for unit\n *\n * Needs a calc support\n */\n/*\n * for fluid type to fit to screen;\n */\n/*\n * Sets a fluid Unit between to Values\n *\n * $min-size: Minimum Value\n * $max-size: Maximum Value\n * $min-view: Size at which to use $min-size\n * $max-view: Size at which to use $max-size\n *\n * works best with px Unit\n */\n/* Can be used with Custom Proporties */\n/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n/**\n * src/css/libhalma/_vertical_rhythm.scss\n *\n * @author Carsten Coull <c.coull@agentur-halma.de>\n * @package libhalma\n */\nbody {\n  position: relative;\n}\n\n.debug-base-line-grid {\n  background-image: linear-gradient(to bottom, transparent 0, transparent calc(1.5rem), rgba(255, 99, 71, 0.1) calc(1.5rem), rgba(255, 99, 71, 0.1));\n  background-size: 100% 3rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none;\n  z-index: 32766;\n  top: -16px;\n}\n\n:root {\n  --primary-100: #b9e4d8;\n  --primary-200: #9fdac9;\n  --primary-300: #82d4bc;\n  --primary-400: #61d1af;\n  --primary-500: #3ed1a6;\n  --primary-600: #20cb97;\n  --primary-700: #0cbb88;\n  --primary-800: #00a471;\n  --primary-900: #00805a;\n  --primary: #20cb97;\n  --secondary-100: #b2d2db;\n  --secondary-200: #99c4d0;\n  --secondary-300: #7db7ca;\n  --secondary-400: #5cadc7;\n  --secondary-500: #38a8c7;\n  --secondary-600: #2298b9;\n  --secondary-700: #1086a7;\n  --secondary-800: #027093;\n  --secondary-900: #005571;\n  --secondary: #2298b9;\n  --foreground-100: hsl(0, 0%, 0%);\n  --foreground-200: hsl(0, 0%, 5%);\n  --foreground-300: hsl(0, 0%, 10%);\n  --foreground-400: hsl(0, 0%, 15%);\n  --foreground-500: hsl(0, 0%, 20%);\n  --foreground-600: hsl(0, 0%, 25%);\n  --foreground-700: hsl(0, 0%, 30%);\n  --foreground-800: hsl(0, 0%, 35%);\n  --foreground-900: hsl(0, 0%, 40%);\n  --foreground: hsl(0, 0%, 15%);\n  --background-100: hsl(0, 0%, 100%);\n  --background-200: hsl(0, 0%, 95%);\n  --background-300: hsl(0, 0%, 90%);\n  --background-400: hsl(0, 0%, 85%);\n  --background-500: hsl(0, 0%, 80%);\n  --background-600: hsl(0, 0%, 75%);\n  --background-700: hsl(0, 0%, 70%);\n  --background-800: hsl(0, 0%, 65%);\n  --background-900: hsl(0, 0%, 60%);\n  --background: hsl(0, 0%, 85%);\n  --neutral-100: hsl(0, 0%, 70%);\n  --neutral-200: hsl(0, 0%, 65%);\n  --neutral-300: hsl(0, 0%, 60%);\n  --neutral-400: hsl(0, 0%, 55%);\n  --neutral-500: hsl(0, 0%, 50%);\n  --neutral-600: hsl(0, 0%, 45%);\n  --neutral-700: hsl(0, 0%, 40%);\n  --neutral-800: hsl(0, 0%, 35%);\n  --neutral-900: hsl(0, 0%, 30%);\n  --neutral: hsl(0, 0%, 55%);\n  --success-100: #99d49b;\n  --success-200: #78c77c;\n  --success-300: #58b95c;\n  --success-400: #43a047;\n  --success-500: #317534;\n  --success-600: #285f2a;\n  --success-700: #225124;\n  --success-800: #1c431e;\n  --success-900: #132d14;\n  --success: #43a047;\n  --warning-100: #f4e6bd;\n  --warning-200: #efd994;\n  --warning-300: #ebcb6a;\n  --warning-400: #e7be40;\n  --warning-500: #d5a515;\n  --warning-600: #bd920e;\n  --warning-700: #af8607;\n  --warning-800: #a27a00;\n  --warning-900: #846300;\n  --warning: #e7be40;\n  --error-100: #e8bdbc;\n  --error-200: #de9a98;\n  --error-300: #d47674;\n  --error-400: #cc514e;\n  --error-500: #b0302d;\n  --error-600: #9b2623;\n  --error-700: #901d1a;\n  --error-800: #841411;\n  --error-900: #6d0c0a;\n  --error: #cc514e;\n  --white: #fff;\n  --black: #000;\n}\n\n/**\n * src/css/libhalma/_classes.scss\n *\n * Predefined utility classes\n *\n * @author C.Coull <c.coull@agentur-halma.de>\n * @author J. Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-27\n */\n/**\n * From: EveryLayout\n */\n/**\n * From: EveryLayout\n */\n/**\n * The Cluster\n *\n * https://every-layout.dev/demos/cluster-ctas/\n *\n * We can use `gap` now on flexbox items, so it gets really easy now :-)\n */\n/**\n * The Stack\n *\n * Spacing for vertically stacked blocks\n */\n.media-select {\n  --font-family: \"Manrope\", sans-serif;\n  --line-height: 1.5;\n  --font-weight: 400;\n  --font-size: 1rem;\n  --margin: 2rem;\n  --spacing-100: 0.25rem;\n  --spacing-200: 0.5rem;\n  --spacing-300: 1rem;\n  --spacing-400: 2rem;\n  --spacing-500: 4rem;\n  --spacing-600: 6rem;\n  --spacing-700: 8rem;\n  --spacing-800: 10rem;\n  --spacing-900: 14rem;\n  --border-width: 2px;\n  --border-radius: 4px;\n  --border-color: currentColor;\n  --border-type: solid;\n  --border: var(--border-color) var(--border-width) var(--border-type)\n  \tvar(--border-radius);\n  --outline-width: 4px;\n  --gutter: $spacing;\n  --vertical-unit: 1.5rem;\n  --outer-bound: 2rem;\n  --inner-bound-width: 68rem;\n  --outer-bound-width: 86rem;\n  --header-height: clamp(5rem, 100vw * 0.0076923077 - -4.8461538462rem, 6.5rem);\n  --screen-height: 100vh;\n  --spacing: 1rem;\n  --typography-spacing-vertical: 1.5rem;\n  --block-spacing-vertical: 2rem;\n  --block-spacing-horizontal: 1rem;\n  --form-element-spacing-vertical: 0.75rem;\n  --form-element-spacing-horizontal: 1rem;\n  --grid-spacing-vertical: 0;\n  --grid-spacing-horizontal: 1rem;\n  --nav-element-spacing-vertical: 1rem;\n  --nav-element-spacing-horizontal: 0.5rem;\n  --nav-link-spacing-vertical: 0.5rem;\n  --nav-link-spacing-horizontal: 0.5rem;\n  --form-label-font-weight: var(--font-weight);\n  --transition: 200ms ease-in-out;\n}\n@media (max-width: 768px) {\n  .media-select {\n    --outer-bound: 1rem;\n  }\n}\n.media-select details {\n  border: none;\n  margin: 0;\n  padding: 0;\n}\n.media-select summary::after {\n  display: none;\n}\n.media-select li {\n  margin-left: 2rem;\n  position: relative;\n}\n.media-select li + li {\n  margin-top: var(--spacing);\n}\n.media-select li > details > summary,\n.media-select li > svg {\n  position: absolute;\n  left: -1rem;\n  top: 0.75rem;\n  transform: translateX(-100%);\n}\n.media-select svg path {\n  stroke: currentColor !important;\n}\n.media-select ul,\n.media-select li {\n  list-style: none;\n  margin-bottom: 0;\n}\n.media-select ul::after, .media-select ul::before, .media-select ul::marker,\n.media-select li::after,\n.media-select li::before,\n.media-select li::marker {\n  display: none;\n}\n.media-select label {\n  border: var(--border-width) solid var(--primary);\n  border-radius: var(--border-radius);\n  display: inline-block;\n  margin-bottom: 0;\n  text-align: left;\n  padding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);\n  --background-color: transparent;\n  --color: var(--primary);\n}\n.media-select label:is([aria-current], :hover, :active, :focus) {\n  --background-color: transparent;\n  --color: var(--primary-hover);\n}\n.media-select input[type=radio] {\n  display: none;\n}\n.media-select input[type=radio]:checked + label {\n  background-color: var(--primary);\n  color: var(--primary-inverse);\n}\n.media-select input[type=radio]:disabled + label {\n  color: var(--text-color);\n  border-color: var(--text-color);\n}\n.media-select figure {\n  display: flex;\n  gap: var(--spacing);\n  align-items: center;\n}\n.media-select .meida-image {\n  max-width: 6rem;\n}\n\n.layout-menu {\n  background-color: grey;\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 2000;\n  width: fit-content;\n  box-sizing: border-box;\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  overflow: hidden;\n  display: flex;\n  gap: var(--spacing, 1rem);\n  align-items: center;\n  padding: 0;\n}\n.layout-menu p {\n  padding: 0;\n  margin: 0;\n}\n.layout-menu a:not(.layout-button) {\n  color: #61d1af;\n}\n.layout-menu .layout-button, .layout-menu dialog button, dialog .layout-menu button {\n  padding-block: 0.25rem;\n  min-height: 100%;\n}\n\n.layout-loading {\n  cursor: wait;\n  pointer-events: none;\n  opacity: 0.8;\n}\n\n.layout-container, .layout-element, .layout-slot {\n  width: 100%;\n  position: relative;\n}\n\n.layout-element {\n  position: relative;\n  border: solid 4px transparent;\n  transition: 150ms border-color;\n}\n.layout-element:hover {\n  border: solid 4px #61d1af;\n}\n.layout-element:hover > .layout-handle {\n  opacity: 1;\n}\n.layout-element:hover .select-media {\n  opacity: 1;\n}\n.layout-element .ce-block__content,\n.layout-element .ce-toolbar__content {\n  max-width: 100%;\n}\n\n.layout-handle {\n  opacity: 0;\n  position: absolute;\n  z-index: 10;\n  top: 0;\n  right: 1rem;\n  left: 1rem;\n  transition: 150ms opacity;\n  display: flex;\n  gap: 2rem;\n  justify-content: space-between;\n  pointer-events: none;\n}\n.layout-handle > * {\n  pointer-events: all;\n}\n.layout-handle__actions :first-child {\n  border-bottom-left-radius: 0.5rem;\n}\n.layout-handle__actions :last-child {\n  border-bottom-right-radius: 0.5rem;\n}\n\n.layout-button, dialog button {\n  --font-family: \"Manrope\", sans-serif;\n  --line-height: 1.5;\n  --font-weight: 400;\n  --font-size: 1rem;\n  --margin: 2rem;\n  --spacing-100: 0.25rem;\n  --spacing-200: 0.5rem;\n  --spacing-300: 1rem;\n  --spacing-400: 2rem;\n  --spacing-500: 4rem;\n  --spacing-600: 6rem;\n  --spacing-700: 8rem;\n  --spacing-800: 10rem;\n  --spacing-900: 14rem;\n  --border-width: 2px;\n  --border-radius: 4px;\n  --border-color: currentColor;\n  --border-type: solid;\n  --border: var(--border-color) var(--border-width) var(--border-type)\n  \tvar(--border-radius);\n  --outline-width: 4px;\n  --gutter: $spacing;\n  --vertical-unit: 1.5rem;\n  --outer-bound: 2rem;\n  --inner-bound-width: 68rem;\n  --outer-bound-width: 86rem;\n  --header-height: clamp(5rem, 100vw * 0.0076923077 - -4.8461538462rem, 6.5rem);\n  --screen-height: 100vh;\n  --spacing: 1rem;\n  --typography-spacing-vertical: 1.5rem;\n  --block-spacing-vertical: 2rem;\n  --block-spacing-horizontal: 1rem;\n  --form-element-spacing-vertical: 0.75rem;\n  --form-element-spacing-horizontal: 1rem;\n  --grid-spacing-vertical: 0;\n  --grid-spacing-horizontal: 1rem;\n  --nav-element-spacing-vertical: 1rem;\n  --nav-element-spacing-horizontal: 0.5rem;\n  --nav-link-spacing-vertical: 0.5rem;\n  --nav-link-spacing-horizontal: 0.5rem;\n  --form-label-font-weight: var(--font-weight);\n  --transition: 200ms ease-in-out;\n  display: inline-flex;\n  align-self: stretch;\n  align-items: center;\n  background-color: #61d1af;\n  color: #fff;\n  font-weight: 800;\n  text-decoration: none;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n}\n@media (max-width: 768px) {\n  .layout-button, dialog button {\n    --outer-bound: 1rem;\n  }\n}\n.layout-button svg, dialog button svg {\n  height: 24px;\n  width: auto;\n  vertical-align: middle;\n}\n.layout-button:focus, dialog button:focus, .layout-button:hover, dialog button:hover {\n  background-color: #3ed1a6;\n}\n.layout-button--new {\n  border-radius: 0.5rem;\n  left: 50%;\n}\n.layout-container > .layout-button--new {\n  position: absolute;\n  z-index: 12;\n  bottom: 4px;\n  transform: translate(-50%, 100%);\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n.layout-container > .layout-button--new::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  z-index: 12;\n  background-color: #61d1af;\n  height: 4px;\n  width: 200px;\n  left: 50%;\n  transform: translateX(-50%);\n  border-radius: 0.5rem;\n}\n.layout-slot > .layout-button--new {\n  display: none;\n  position: relative;\n  transform: translateX(-50%);\n  margin: 2rem 0;\n}\n.layout-slot > .layout-button--new:only-child {\n  display: inherit;\n}\n\n.rhino-select {\n  --font-family: \"Manrope\", sans-serif;\n  --line-height: 1.5;\n  --font-weight: 400;\n  --font-size: 1rem;\n  --margin: 2rem;\n  --spacing-100: 0.25rem;\n  --spacing-200: 0.5rem;\n  --spacing-300: 1rem;\n  --spacing-400: 2rem;\n  --spacing-500: 4rem;\n  --spacing-600: 6rem;\n  --spacing-700: 8rem;\n  --spacing-800: 10rem;\n  --spacing-900: 14rem;\n  --border-width: 2px;\n  --border-radius: 4px;\n  --border-color: currentColor;\n  --border-type: solid;\n  --border: var(--border-color) var(--border-width) var(--border-type)\n  \tvar(--border-radius);\n  --outline-width: 4px;\n  --gutter: $spacing;\n  --vertical-unit: 1.5rem;\n  --outer-bound: 2rem;\n  --inner-bound-width: 68rem;\n  --outer-bound-width: 86rem;\n  --header-height: clamp(5rem, 100vw * 0.0076923077 - -4.8461538462rem, 6.5rem);\n  --screen-height: 100vh;\n  --spacing: 1rem;\n  --typography-spacing-vertical: 1.5rem;\n  --block-spacing-vertical: 2rem;\n  --block-spacing-horizontal: 1rem;\n  --form-element-spacing-vertical: 0.75rem;\n  --form-element-spacing-horizontal: 1rem;\n  --grid-spacing-vertical: 0;\n  --grid-spacing-horizontal: 1rem;\n  --nav-element-spacing-vertical: 1rem;\n  --nav-element-spacing-horizontal: 0.5rem;\n  --nav-link-spacing-vertical: 0.5rem;\n  --nav-link-spacing-horizontal: 0.5rem;\n  --form-label-font-weight: var(--font-weight);\n  --transition: 200ms ease-in-out;\n  display: inline-block;\n  color: hsl(0, 0%, 40%);\n  font-weight: 600;\n  appearance: none;\n  padding-right: 2rem;\n  padding-left: 0.5rem;\n  padding-block: 0rem;\n  text-decoration: none;\n  margin-top: -4px;\n  border: #61d1af solid 4px;\n  border-radius: 0 0 0.5rem 0.5rem;\n  cursor: pointer;\n  --icon-chevron: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(102, 102, 102)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-image: var(--icon-chevron);\n  background-position: center right 0.75rem;\n  background-size: 1rem auto;\n  background-repeat: no-repeat;\n}\n@media (max-width: 768px) {\n  .rhino-select {\n    --outer-bound: 1rem;\n  }\n}\n\n.select-media {\n  opacity: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\ndialog {\n  --font-family: \"Manrope\", sans-serif;\n  --line-height: 1.5;\n  --font-weight: 400;\n  --font-size: 1rem;\n  --margin: 2rem;\n  --spacing-100: 0.25rem;\n  --spacing-200: 0.5rem;\n  --spacing-300: 1rem;\n  --spacing-400: 2rem;\n  --spacing-500: 4rem;\n  --spacing-600: 6rem;\n  --spacing-700: 8rem;\n  --spacing-800: 10rem;\n  --spacing-900: 14rem;\n  --border-width: 2px;\n  --border-radius: 4px;\n  --border-color: currentColor;\n  --border-type: solid;\n  --border: var(--border-color) var(--border-width) var(--border-type)\n  \tvar(--border-radius);\n  --outline-width: 4px;\n  --gutter: $spacing;\n  --vertical-unit: 1.5rem;\n  --outer-bound: 2rem;\n  --inner-bound-width: 68rem;\n  --outer-bound-width: 86rem;\n  --header-height: clamp(5rem, 100vw * 0.0076923077 - -4.8461538462rem, 6.5rem);\n  --screen-height: 100vh;\n  --spacing: 1rem;\n  --typography-spacing-vertical: 1.5rem;\n  --block-spacing-vertical: 2rem;\n  --block-spacing-horizontal: 1rem;\n  --form-element-spacing-vertical: 0.75rem;\n  --form-element-spacing-horizontal: 1rem;\n  --grid-spacing-vertical: 0;\n  --grid-spacing-horizontal: 1rem;\n  --nav-element-spacing-vertical: 1rem;\n  --nav-element-spacing-horizontal: 0.5rem;\n  --nav-link-spacing-vertical: 0.5rem;\n  --nav-link-spacing-horizontal: 0.5rem;\n  --form-label-font-weight: var(--font-weight);\n  --transition: 200ms ease-in-out;\n  width: 100%;\n  max-width: 52rem;\n  margin: auto;\n  border: none;\n}\n@media (max-width: 768px) {\n  dialog {\n    --outer-bound: 1rem;\n  }\n}\n@media (min-width: 576px) {\n  dialog {\n    width: calc(100% - var(--outer-bound) * 2);\n  }\n}\ndialog::backdrop {\n  --modal-overlay-background-color: rgba(0, 0, 0, 0.2);\n  background-color: var(--modal-overlay-background-color);\n  --modal-overlay-backdrop-filter: blur(0.25rem);\n  -webkit-backdrop-filter: var(--modal-overlay-backdrop-filter);\n  backdrop-filter: var(--modal-overlay-backdrop-filter);\n}\ndialog .close,\ndialog [aria-label=close] {\n  position: sticky;\n  display: block;\n  right: 0;\n  margin-left: auto;\n  top: 0;\n  width: 1rem;\n  height: 1rem;\n  background-image: var(--icon-close);\n  background-position: center;\n  background-size: auto 1rem;\n  background-repeat: no-repeat;\n  opacity: 0.5;\n  padding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);\n  margin-bottom: var(--spacing);\n  --background-color: transparent;\n  background-color: var(--background-color);\n  --border-color: var(--contrast);\n  border: var(--border-width) solid var(--border-color);\n}\ndialog .close:focus, dialog .close:hover,\ndialog [aria-label=close]:focus,\ndialog [aria-label=close]:hover {\n  --box-shadow: var(--button-hover-box-shadow, 0 0 0 rgba(0, 0, 0, 0)), 0 0 0 var(--outline-width) var(--contrast-focus);\n  --border-color: var(--contrast-hover);\n  --color: var(--contrast-hover);\n  --background-color: transparent;\n  box-shadow: var(--box-shadow);\n}\ndialog > article {\n  padding: var(--block-spacing-vertical) var(--block-spacing-horizontal);\n  border-radius: var(--border-radius);\n  background: var(--card-background-color);\n  box-shadow: var(--card-box-shadow);\n}\ndialog > article > footer {\n  border-top: var(--border-width) solid var(--card-border-color);\n  border-bottom-right-radius: var(--border-radius);\n  border-bottom-left-radius: var(--border-radius);\n  border-top: var(--border-width) solid var(--card-border-color);\n  border-bottom-right-radius: var(--border-radius);\n  border-bottom-left-radius: var(--border-radius);\n  padding: calc(var(--block-spacing-vertical) * 0.66) var(--block-spacing-horizontal);\n  background-color: var(--card-sectionning-background-color);\n  margin-top: var(--block-spacing-vertical);\n  margin-bottom: calc(var(--block-spacing-vertical) * -1);\n  margin-right: calc(var(--block-spacing-horizontal) * -1);\n  margin-left: calc(var(--block-spacing-horizontal) * -1);\n  gap: 0.5rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n}\ndialog > article > footer > * {\n  flex: 1 1 0;\n  min-width: fit-content;\n}\ndialog > article > footer--shrink {\n  max-width: fit-content;\n}\ndialog > article main {\n  min-height: 12rem;\n  --border-color: var(--muted-color);\n  border: var(--border-width) solid var(--border-color);\n  border-radius: var(--border-radius);\n  padding: var(--spacing) var(--form-element-spacing-horizontal);\n}\n.editor {\n  background: #f6f6f6;\n  color: #333;\n  border-radius: 0.5rem;\n  padding: 1rem 1rem 1rem 4rem;\n}\n\n.mark {\n  outline: tomato 8px dotted;\n}","@use 'sass:color';\n@use 'sass:string';\n@use 'sass:list';\n@use 'sass:map';\n@use 'settings' as *;\n\n$default-colors: (\n    primary: (\n\t\t100: hsl(201, 64%, 96%),\n\t\t200: hsl(199, 61%, 92%),\n\t\t300: hsl(200, 62%, 78%),\n\t\t400: hsl(200, 63%, 63%),\n\t\t500: hsl(200, 63%, 51%),\n\t\t600: hsl(200, 100%, 38%),\n\t\t700: hsl(205, 81%, 45%),\n\t\t800: hsl(207, 85%, 34%),\n\t\t900: hsl(208, 89%, 24%),\n\t),\n    secondary: (\n\t\t100: hsl(127, 43%, 96%),\n\t\t200: hsl(124, 46%, 93%),\n\t\t300: hsl(123, 46%, 80%),\n\t\t400: hsl(123, 45%, 66%),\n\t\t500: hsl(123, 46%, 55%),\n\t\t600: hsl(123, 59%, 44%),\n\t\t700: hsl(124, 64%, 33%),\n\t\t800: hsl(124, 68%, 22%),\n\t\t900: hsl(124, 72%, 11%),\n\t),\n\tforeground: (\n\t\t100: hsl(0, 0%, 10%),\n\t\t200: hsl(0, 0%, 20%),\n\t\t300: hsl(0, 0%, 30%),\n\t\t400: hsl(0, 0%, 40%),\n\t\t500: hsl(0, 0%, 50%),\n\t\t600: hsl(0, 0%, 60%),\n\t\t700: hsl(0, 0%, 70%),\n\t\t800: hsl(0, 0%, 80%),\n\t\t900: hsl(0, 0%, 90%),\n\t),\n\tbackground: (\n\t\t100: hsl(0, 0%, 10%),\n\t\t200: hsl(0, 0%, 20%),\n\t\t300: hsl(0, 0%, 30%),\n\t\t400: hsl(0, 0%, 40%),\n\t\t500: hsl(0, 0%, 50%),\n\t\t600: hsl(0, 0%, 60%),\n\t\t700: hsl(0, 0%, 70%),\n\t\t800: hsl(0, 0%, 80%),\n\t\t900: hsl(0, 0%, 90%),\n\t),\n\tneutral: (\n\t\t100: hsl(0, 0%, 10%),\n\t\t200: hsl(0, 0%, 20%),\n\t\t300: hsl(0, 0%, 30%),\n\t\t400: hsl(0, 0%, 40%),\n\t\t500: hsl(0, 0%, 50%),\n\t\t600: hsl(0, 0%, 60%),\n\t\t700: hsl(0, 0%, 70%),\n\t\t800: hsl(0, 0%, 80%),\n\t\t900: hsl(0, 0%, 90%),\n\t),\n\tsuccess: (\n\t\t100: hsl(200, 100%, 80%),\n\t\t200: hsl(200, 100%, 70%),\n\t\t300: hsl(200, 100%, 58%),\n\t\t400: hsl(123, 59%, 44%),\n\t\t500: hsl(200, 100%, 34%),\n\t\t600: hsl(200, 100%, 28%),\n\t\t700: hsl(200, 100%, 18%),\n\t\t800: hsl(200, 100%, 8%),\n\t\t900: hsl(200, 100%, 0%),\n\t),\n\twarning: (\n\t\t100: hsl(200, 100%, 80%),\n\t\t200: hsl(200, 100%, 70%),\n\t\t300: hsl(200, 100%, 58%),\n\t\t400: hsl(123, 59%, 44%),\n\t\t500: hsl(200, 100%, 34%),\n\t\t600: hsl(200, 100%, 28%),\n\t\t700: hsl(200, 100%, 18%),\n\t\t800: hsl(200, 100%, 8%),\n\t\t900: hsl(200, 100%, 0%),\n\t),\n\terror: (\n\t\t100: hsl(200, 100%, 80%),\n\t\t200: hsl(200, 100%, 70%),\n\t\t300: hsl(200, 100%, 58%),\n\t\t400: hsl(123, 59%, 44%),\n\t\t500: hsl(200, 100%, 34%),\n\t\t600: hsl(200, 100%, 28%),\n\t\t700: hsl(200, 100%, 18%),\n\t\t800: hsl(200, 100%, 8%),\n\t\t900: hsl(200, 100%, 0%),\n\t),\n\tprimary-shade: 600, \n\tsecondary-shade: 600,\n\tforeground-shade: 400,\n\tbackground-shade: 400,\n\tneutral-shade: 400,\n\tsuccess-shade: 400,\n\twarning-shade: 400,\n\terror-shade: 400,\n) !default;\n\n$weights: (\n\t100,\n\t200,\n\t300,\n\t400,\n\t500,\n\t600,\n\t700,\n\t800,\n\t900,\n) !default;\n\n$keys: (\n\t\"primary\", \n\t\"secondary\",\n\t\"foreground\",\n\t\"background\",\n\t\"neutral\",\n\t\"success\",\n\t\"warning\",\n\t\"error\",\n) !default;\n\n\n// Black & White\n$black: #000 !default;\n$white: #fff !default;\n\n\n@function color($name, $weight: null) {\n\t// $multi: map.get($saturation-multiplication, $name);\n\t// $shade: clamp(map.get($saturation, $weight) * $multi, -100%, 100%);\n\t// $light: map.get($lightness, $weight);\n\t@if ($weight == null) {\n\t\t$weight: map.get($default-colors, \"#{$name}-shade\");\n\t}\n\n\t$color: map.get($default-colors, $name);\n\t$return: map.get($color, $weight);\n\n\t@if type-of($return)==\"color\" {\n\t\t// @debug \"is a Color!\";\n\t\t@return $return;\n\t}\n\n\t@else {\n\t\t@error \"not a Color!\";\n\t}\n\n\t@return \"\";\n}\n\n:root {\n\t@each $key in $keys {\n\t\t@each $weight in $weights {\n\t\t\t$current-color: color($key, $weight);\n\t\t\t\n\t\t\t--#{$key}-#{$weight}: #{$current-color};\n\t\t}\n\n\t\t--#{$key}: #{color($key)};\n\t}\n\n\t--white: #{$white};\n\t--black: #{$black};\n}\n\n$grey-100: color(\"neutral\", 100);\n$grey-200: color(\"neutral\", 200);\n$grey-300: color(\"neutral\", 300);\n$grey-400: color(\"neutral\", 400);\n$grey-500: color(\"neutral\", 500);\n$grey-600: color(\"neutral\", 600);\n$grey-700: color(\"neutral\", 700);\n$grey-800: color(\"neutral\", 800);\n$grey-900: color(\"neutral\", 900);\n\n$primary-600: color(\"primary\", 400);\n$primary-700: color(\"primary\", 700);\n\n$secondary-500: color(\"secondary\", 500);\n$secondary-600: color(\"secondary\", 400);\n$secondary-700: color(\"secondary\", 700);\n\n$amber-100: color(\"warning\", 100);\n$amber-300: color(\"warning\", 300);\n$amber-900: color(\"warning\", 900);\n\n$green-600: color(\"success\", 600);\n$green-700: color(\"success\", 700);\n$green-800: color(\"success\", 800);\n\n$red-700: color(\"error\", 700);\n$red-800: color(\"error\", 800);\n$red-900: color(\"error\", 900);\n","/**\n * src/css/libhalma/_classes.scss\n *\n * Predefined utility classes\n *\n * @author C.Coull <c.coull@agentur-halma.de>\n * @author J. Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-27\n */\n\n// Screenreader only\n@mixin sr-only($visible-on-focus: true) {\n\t// color: transparent;\n\tdisplay: inline-block;\n\topacity: 0;\n\tbackground: none;\n\tposition: absolute;\n\tline-height: 0;\n\tfont-size: 0;\n\toverflow: hidden;\n\twidth: 2px;\n\theight: 2px;\n\tmargin: -1px;\n\n\t@if $visible-on-focus {\n\t\t&:focus,\n\t\t&:active {\n\t\t\topacity: 1;\n\t\t\t// color: inherit;\n\t\t\tfont-size: inherit;\n\t\t\tline-height: inherit;\n\t\t\twidth: auto;\n\t\t\twidth: max-content;\n\t\t\theight: auto;\n\t\t\theight: max-content;\n\t\t\tmargin: 0;\n\t\t\tz-index: 1;\n\t\t}\n\t}\n}\n\n@mixin bound($bound-width: 64rem, $padding: false) {\n\tmax-width: $bound-width;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t@media screen and (min-width: $bound-width) {\n\t\tbox-sizing: content-box; // Yes ;-) see EveryLayout: Center\n\t}\n\n\t@if $padding {\n\t\tpadding-left: $padding;\n\t\tpadding-right: $padding;\n\t}\n}\n\n// Take scrollbar-width in to account\n// @see https://destroytoday.com/blog/100vw-and-the-horizontal-overflow-you-probably-didnt-know-about\n@mixin full-width($scrollbar-width: 0) {\n\t--half-screen-width: calc((100vw - #{$scrollbar-width}) / 2);\n\tmargin-left: calc(50% - var(--half-screen-width));\n\tmargin-right: calc(50% - var(--half-screen-width));\n}\n\n@mixin skip-link {\n\tposition: fixed;\n\tz-index: 200;\n\ttop: 0;\n\tleft: 50%;\n\ttransform: translate(-50%, -200%);\n\ttransition: transform 300ms ease-in-out;\n\n\t&:focus {\n\t\ttransform: translate(-50%, 0%);\n\t}\n}\n\n@mixin list-style-none {\n\tlist-style: none;\n\tpadding-left: 0;\n\n\tli {\n\t\tlist-style: none;\n\t\tposition: static;\n\t\tpadding: 0;\n\n\t\t&::before,\n\t\t&::marker {\n\t\t\tcontent: none;\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n// set thumb and Background Color\n// use on html to set global\n// Webkit and Chromium will ignore color when size isn't set\n@mixin scrollbars(\n\t$foreground-color: #999,\n\t$background-color: #333,\n\t$size: false\n) {\n\t@if $size {\n\t\t// For Chrome & Safari\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t}\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground: $foreground-color;\n\t}\n\t&::-webkit-scrollbar-track {\n\t\tbackground: var(--background-color);\n\t}\n\n\t// Standard version (Firefox only for now)\n\tscrollbar-color: $foreground-color var(--background-color);\n}\n\n/**\n * From: EveryLayout\n */\n$box-color: var(--color) !default;\n$box-background: var(--muted-border-color) !default;\n$box-padding: var(--spacing) !default;\n$box-border-radius: var(--border-radius) !default;\n\n@mixin box(\n\t$color: $box-color,\n\t$background: $box-background,\n\t$padding: $box-padding,\n\t$border-radius: $box-border-radius\n) {\n\tpadding: $padding;\n\tcolor: $color;\n\tbackground-color: $background;\n\tborder-radius: $border-radius;\n}\n\n/**\n * From: EveryLayout\n */\n@mixin center($max-width: false) {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\t@if $max-width {\n\t\tmax-width: $max-width;\n\t}\n}\n\n/**\n * The Cluster\n *\n * https://every-layout.dev/demos/cluster-ctas/\n *\n * We can use `gap` now on flexbox items, so it gets really easy now :-)\n */\n\n$cluster-spacing: 1rem !default;\n$cluster-gap: true !default;\n\n@mixin cluster($spacing: $cluster-spacing, $use-gap: $cluster-gap) {\n\t@if $use-gap {\n\t\tgap: $spacing;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\n\t\t& > * {\n\t\t\tflex: 1 1 0; // Set flex-basis to 0 so it can grow into it.\n\t\t\tmin-width: fit-content;\n\t\t}\n\t} @else {\n\t\t> * {\n\t\t\tdisplay: flex;\n\t\t\tflex-wrap: wrap;\n\t\t\tjustify-content: stretch;\n\t\t\talign-items: center;\n\t\t\tmargin: calc(#{$spacing} / 2 * -1);\n\t\t}\n\t}\n\n\t@if $use-gap != true {\n\t\t> * > * {\n\t\t\tmargin: calc(#{$spacing} / 2);\n\t\t}\n\t}\n\n\t&--shrink {\n\t\tmax-width: fit-content;\n\t}\n}\n\n@mixin cover {\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-block-size: var(--screen-height, 100vh);\n\tpadding: 1rem;\n\n\t& > * {\n\t\tmargin-block: 1rem;\n\t}\n\n\t& > :first-child:not(h1) {\n\t\tmargin-block-start: 0;\n\t}\n\n\t& > :last-child:not(h1) {\n\t\tmargin-block-end: 0;\n\t}\n\n\t& > h1 {\n\t\tmargin-block: auto;\n\t}\n}\n\n@mixin icon($stroke: none, $vertical-align: -0.01em, $space: 0.5em) {\n\tdisplay: inline-block;\n\theight: 0.75em;\n\twidth: 0.75em;\n\t/* ↓ Override the em value with `1cap`  where `cap` is supported */\n\theight: 1cap;\n\twidth: 1cap;\n\toverflow: visible;\n\tvertical-align: $vertical-align;\n\n\tsvg {\n\t\tfill: currentColor !important;\n\t\tstroke: $stroke;\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n}\n\n@mixin with-icon($space: 0.5em) {\n\t/* ↓ Set the `inline-flex` context,  which eliminates the word space */\n\tdisplay: inline-flex;\n\talign-items: center;\n\tgap: var(--space, #{$space});\n}\n\n/**\n * The Stack\n *\n * Spacing for vertically stacked blocks\n */\n\n$stack-spacing: 1rem !default;\n\n@mixin stack($spacing: $stack-spacing) {\n\t> *:not([style*=\"display:none\"]) + * {\n\t\tmargin-top: $spacing;\n\t}\n}\n","// Load Settings\n@use \"settings\" as *;\n\n// Get lib before custom\n@use \"base_theme/library\" as *;\n// @use \"theme/light\" as *;\n@use \"base_theme/theme/measurements\" as *;\n\n.media-select {\n\t// @include light;\n\t@include measurements;\n\n\tdetails {\n\t\tborder: none;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\tsummary::after {\n\t\tdisplay: none;\n\t}\n\n\tli {\n\t\tmargin-left: 2rem;\n\t\tposition: relative;\n\t}\n\n\tli+li {\n\t\tmargin-top: var(--spacing);\n\t}\n\n\tli>details>summary,\n\tli>svg {\n\t\tposition: absolute;\n\t\tleft: -1rem;\n\t\ttop: 0.75rem;\n\t\ttransform: translateX(-100%);\n\t}\n\n\tsvg path {\n\t\tstroke: currentColor !important;\n\t}\n\n\tul,\n\tli {\n\t\tlist-style: none;\n\t\tmargin-bottom: 0;\n\n\t\t&::after, &::before, &::marker {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\tlabel {\n\t\tborder: var(--border-width) solid var(--primary);\n\t\tborder-radius: var(--border-radius);\n\t\t@extend .button !optional;\n\t\tdisplay: inline-block;\n\t\tmargin-bottom: 0;\n\t\ttext-align: left;\n\t\tpadding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);\n\t\t--background-color: transparent;\n\t\t--color: var(--primary);\n\n\t\t&:is([aria-current], :hover, :active, :focus) {\n\t\t\t--background-color: transparent;\n\t\t\t--color: var(--primary-hover);\n\t\t}\n\t}\n\n\tinput[type=radio] {\n\t\tdisplay: none;\n\t}\n\n\tinput[type=radio]:checked+label {\n\t\tbackground-color: var(--primary);\n\t\tcolor: var(--primary-inverse);\n\t}\n\n\tinput[type=radio]:disabled+label {\n\t\tcolor: var(--text-color);\n\t\tborder-color: var(--text-color);\n\t}\n\n\tfigure {\n\t\tdisplay: flex;\n\t\tgap: var(--spacing);\n\t\t// justify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.meida-image {\n\t\tmax-width: 6rem;\n\t}\n}","@use \"sass:map\";\n@use \"settings\" as *;\n@use \"library\" as *;\n\n@mixin measurements {\n\t--font-family: \"Manrope\", sans-serif;\n\t--line-height: 1.5;\n\t--font-weight: 400;\n\t--font-size: 1rem;\n\n\t--margin: #{map.get($spacings, 400)};\n\n\t@each $key, $spacing in $spacings {\n\t\t--spacing-#{$key}: #{$spacing};\n\t}\n\n\t@each $key, $value in $border {\n\t\t--border-#{$key}: #{$value};\n\t}\n\n\t--border: var(--border-color) var(--border-width) var(--border-type)\n\t\tvar(--border-radius);\n\t--outline-width: #{map.get($outline, width)};\n\n\t--gutter: $spacing;\n\t--vertical-unit: #{$vertical-unit};\n\n\t--outer-bound: #{2 * $spacing};\n\t@include for-size(md-down) {\n\t\t--outer-bound: #{$spacing};\n\t}\n\n\t--inner-bound-width: #{$inner-bound-width};\n\t--outer-bound-width: #{$outer-bound-width};\n\t--header-height: #{slope-rem-minmax(\n\t\t\t$min-header-height,\n\t\t\t$max-header-height,\n\t\t\t$min-supported-screen-width,\n\t\t\t$max-supported-screen-width\n\t\t)};\n\n\t@if $substract-header-height {\n\t\t--screen-height: calc(100vh - var(--header-height));\n\t} @else {\n\t\t--screen-height: 100vh;\n\t}\n\n\t// Spacings\n\t--spacing: #{$spacing};\n\n\t// Spacings for typography elements\n\t--typography-spacing-vertical: #{$vertical-unit};\n\n\t// Spacings for body > header, body > main, body > footer, section, article\n\t--block-spacing-vertical: #{$spacing * 2};\n\t--block-spacing-horizontal: #{$spacing};\n\n\t// Spacings for form elements and button\n\t--form-element-spacing-vertical: #{$spacing * 0.75};\n\t--form-element-spacing-horizontal: #{$spacing};\n\n\t--grid-spacing-vertical: 0;\n\t--grid-spacing-horizontal: #{$spacing};\n\n\t// Spacings for nav component\n\t--nav-element-spacing-vertical: #{$spacing};\n\t--nav-element-spacing-horizontal: #{$spacing * 0.5};\n\t--nav-link-spacing-vertical: #{$spacing * 0.5};\n\t--nav-link-spacing-horizontal: #{$spacing * 0.5};\n\n\t// Font weight for form labels & fieldsets legend\n\t--form-label-font-weight: var(--font-weight);\n\n\t// Transitions\n\t--transition: 200ms ease-in-out;\n}\n\n@if $fade-in-transition {\n\t.main-content > * {\n\t\ttransition-duration: 750ms;\n\t\ttransition-timing-function: ease-out, linear;\n\t\ttransition-property: transform, opacity;\n\t}\n\n\tbody:not(.page-has-loaded):not(.cmt-layout) {\n\t\t.main-content > * {\n\t\t\ttransform: translateY(20vh);\n\t\t\topacity: 0;\n\t\t}\n\t}\n}\n","@use \"sass:map\";\n// Load Settings\n@use \"settings\" as *;\n\n// Get lib before custom\n@use \"base_theme/library\" as *;\n// @use \"theme/light\" as *;\n@use \"base_theme/theme/measurements\" as *;\n\n@forward \"components/media-select\";\n\n$spacing: 1rem;\n$border-radius: 0.5rem;\n$border-width: 4px;\n\n.layout-menu {\n\tbackground-color: grey;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tz-index: 2000;\n\twidth: fit-content;\n\tbox-sizing: border-box;\n\tborder-bottom-left-radius: $border-radius;\n\tborder-bottom-right-radius: $border-radius;\n\toverflow: hidden;\n\tdisplay: flex;\n\tgap: var(--spacing, $spacing);\n\talign-items: center;\n\n\tpadding: 0;\n\t// padding-right: 1rem;\n\n\tp {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\n\ta:not(.layout-button) {\n\t\tcolor: color('primary', 400);\n\t}\n\n\t.layout-button {\n\t\tpadding-block: 0.25rem;\n\t\tmin-height: 100%;\n\t}\n}\n\n.layout-loading {\n\tcursor: wait;\n\tpointer-events: none;\n\topacity: 0.8;\n}\n\n.layout-container, .layout-element, .layout-slot {\n\twidth: 100%;\n\tposition: relative;\n}\n\n// .layout-container {\n// \tborder-bottom: color('primary', 400) solid $border-width;\n\t\n// \t& > *:last-child {\n// \t\tmargin-bottom: $border-width * -1;\n// \t}\n// }\n\n.layout-element {\n\tposition: relative;\n\tborder: solid $border-width transparent;\n\ttransition: 150ms border-color;\n\n\t&:hover {\n\t\tborder: solid $border-width color('primary', 400);\n\n\t\t& > .layout-handle {\n\t\t\topacity: 1;\n\t\t}\n\n\t\t.select-media {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t.ce-block__content,\n\t.ce-toolbar__content {\n\t\tmax-width: 100%;\n\t}\n}\n\n.layout-slot {\n\t// background: #f6f6f6;\n\t// color: #333;\n\t// border-radius: $border-radius;\n\t// padding: $spacing;\n}\n\n.layout-handle {\n\topacity: 0;\n\tposition: absolute;\n\tz-index: 10;\n\ttop: 0;\n\tright: 1rem;\n\tleft: 1rem;\n\ttransition: 150ms opacity;\n\tdisplay: flex;\n\tgap: 2rem;\n\tjustify-content: space-between;\n\tpointer-events: none;\n\n\t& > * {\n\t\tpointer-events: all;\n\t}\n\n\t&__actions {\n\t\t:first-child {\n\t\t\tborder-bottom-left-radius: $border-radius;\n\t\t}\n\n\t\t:last-child {\n\t\t\tborder-bottom-right-radius: $border-radius;\n\t\t}\n\t}\n}\n\n.layout-button {\n\t// @include light;\n\t@include measurements;\n\n\tdisplay: inline-flex;\n\talign-self: stretch;\n\talign-items: center;\n\tbackground-color: color('primary', 400);\n\tcolor: $white;\n\tfont-weight: 800;\n\ttext-decoration: none;\n\tborder: none;\n\tpadding: 0.5rem 1rem;\n\tcursor: pointer;\n\n\tsvg {\n\t\t// ToDo: Check Webcomponents or CSS Layers\n\t\theight: 24px;\n\t\twidth: auto;\n\t\tvertical-align: middle;\n\t}\n\n\t&:focus,\n\t&:hover {\n\t\tbackground-color: color('primary', 500);\n\t}\n\n\t&--new {\n\t\tborder-radius: $border-radius;\n\t\tleft: 50%;\n\t\t\n\t\t.layout-container > & {\n\t\t\tposition: absolute;\n\t\t\tz-index: 12;\n\t\t\tbottom: $border-width;\n\t\t\ttransform: translate(-50%, 100%);\n\t\t\tborder-top-left-radius: 0;\n\t\t\tborder-top-right-radius: 0;\n\n\t\t\t&::before {\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tz-index: 12;\n\t\t\t\tbackground-color: color('primary', 400);\n\t\t\t\theight: $border-width;\n\t\t\t\twidth: 200px;\n\t\t\t\tleft: 50%;\n\t\t\t\ttransform: translateX(-50%);\n\t\t\t\tborder-radius: $border-radius;\n\t\t\t}\n\t\t}\n\n\t\t.layout-slot > & {\n\t\t\tdisplay: none;\n\t\t\tposition: relative;\n\t\t\ttransform: translateX(-50%);\n\t\t\tmargin: $spacing * 2 0;\n\n\t\t\t&:only-child {\n\t\t\t\tdisplay: inherit;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.rhino-select {\n\t// @include light;\n\t@include measurements;\n\n\tdisplay: inline-block;\n\tcolor: color(\"neutral\", 700);\n\t// background-color: $white;\n\tfont-weight: 600;\n\tappearance: none;\n\tpadding-right: 2rem;\n\tpadding-left: 0.5rem;\n\tpadding-block: 0rem;\n\ttext-decoration: none;\n\tmargin-top: $border-width * -1;\n\tborder: color('primary', 400) solid $border-width;\n\tborder-radius: 0 0 $border-radius $border-radius;\n\tcursor: pointer;\n\n\t--icon-chevron: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='#{to-rgb(color(\"neutral\", 700))}' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n\tbackground-image: var(--icon-chevron);\n\tbackground-position: center right 0.75rem;\n\tbackground-size: 1rem auto;\n\tbackground-repeat: no-repeat;\n}\n\n.select-media {\n\topacity: 0;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n}\n\ndialog {\n\t// @include light;\n\t@include measurements;\n\twidth: 100%;\n\tmax-width: 52rem;\n\tmargin: auto;\n\tborder: none;\n\t// padding: var(--typography-spacing-vertical);\n\n\t@include for-size(sm-up) {\n\t\twidth: calc(100% - (var(--outer-bound) * 2));\n\t}\n\n\t&::backdrop {\n\t\t--modal-overlay-background-color: rgba(0, 0, 0, 0.2);\n\t\tbackground-color: var(--modal-overlay-background-color);\n\n\t\t--modal-overlay-backdrop-filter: blur(0.25rem);\n\t\t-webkit-backdrop-filter: var(--modal-overlay-backdrop-filter);\n\t\tbackdrop-filter: var(--modal-overlay-backdrop-filter);\n\t}\n\n\t.close,\n\t[aria-label=\"close\"] {\n\t\tposition: sticky;\n\t\tdisplay: block;\n\n\t\tright: 0;\n\t\tmargin-left: auto;\n\t\ttop: 0;\n\n\t\twidth: 1rem;\n\t\theight: 1rem;\n\t\tbackground-image: var(--icon-close);\n\t\tbackground-position: center;\n\t\tbackground-size: auto 1rem;\n\t\tbackground-repeat: no-repeat;\n\t\topacity: .5;\n\n\t\tpadding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);\n\t\tmargin-bottom: var(--spacing);\n\t\t--background-color: transparent;\n\t\tbackground-color: var(--background-color);\n\t\t--border-color: var(--contrast);\n\t\tborder: var(--border-width) solid var(--border-color);\n\n\t\t&:focus, &:hover {\n\t\t\t--box-shadow: var(--button-hover-box-shadow, 0 0 0 rgba(0, 0, 0, 0)), 0 0 0 var(--outline-width) var(--contrast-focus);\n\t\t\t--border-color: var(--contrast-hover);\n\t\t\t--color: var(--contrast-hover);\n\t\t\t--background-color: transparent;\n\t\t\tbox-shadow: var(--box-shadow);\n\t\t}\n\t}\n\n\t&>article {\n\t\t// margin: calc(var(--typography-spacing-vertical) * -1);\n\t\tpadding: var(--block-spacing-vertical) var(--block-spacing-horizontal);\n\t\tborder-radius: var(--border-radius);\n\t\tbackground: var(--card-background-color);\n\t\tbox-shadow: var(--card-box-shadow);\n\n\t\t&>footer {\n\t\t\tborder-top: var(--border-width) solid var(--card-border-color);\n\t\t\tborder-bottom-right-radius: var(--border-radius);\n\t\t\tborder-bottom-left-radius: var(--border-radius);\n\n\t\t\tborder-top: var(--border-width) solid var(--card-border-color);\n\t\t\tborder-bottom-right-radius: var(--border-radius);\n\t\t\tborder-bottom-left-radius: var(--border-radius);\n\n\t\t\tpadding: calc(var(--block-spacing-vertical) * 0.66) var(--block-spacing-horizontal);\n\t\t\tbackground-color: var(--card-sectionning-background-color);\n\n\t\t\tmargin-top: var(--block-spacing-vertical);\n\t\t\tmargin-bottom: calc(var(--block-spacing-vertical) * -1);\n\t\t\tmargin-right: calc(var(--block-spacing-horizontal) * -1);\n\t\t\tmargin-left: calc(var(--block-spacing-horizontal) * -1);\n\n\t\t\t@include cluster($spacing * 0.5);\n\t\t\tjustify-content: flex-end;\n\t\t}\n\n\n\t\tmain {\n\t\t\tmin-height: 12rem;\n\t\t\t--border-color: var(--muted-color);\n\t\t\tborder: var(--border-width) solid var(--border-color);\n\t\t\tborder-radius: var(--border-radius);\n\t\t\tpadding: var(--spacing) var(--form-element-spacing-horizontal);\n\t\t}\n\t}\n\n\tbutton {\n\t\t@extend .layout-button;\n\t}\n}\n\n.editor {\n\tbackground: #f6f6f6;\n\tcolor: #333;\n\tborder-radius: $border-radius;\n\tpadding: $spacing $spacing $spacing $spacing * 4;\n}\n\n.mark {\n\toutline: tomato 8px dotted;\n}"]}