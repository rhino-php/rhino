{
  "version": 3,
  "sources": ["../../app/css/home/coull/Projects/rhino/app/css/library/_index.scss", "../../app/css/home/coull/Projects/rhino/app/css/library/utils.scss", "../../app/css/home/coull/Projects/rhino/app/css/library/rwd.scss", "../../app/css/home/coull/Projects/rhino/app/css/settings.scss", "../../app/css/home/coull/Projects/rhino/app/css/library/type-setting.scss", "../../app/css/%3Cinput%20css%20lHLt9P%3E", "../../app/css/home/coull/Projects/rhino/app/css/library/colors.scss", "../../app/css/home/coull/Projects/rhino/app/css/library/classes.scss", "../../app/css/home/coull/Projects/rhino/app/css/components/cake-fixes.scss", "../../app/css/home/coull/Projects/rhino/app/css/components/pages.scss", "../../app/css/home/coull/Projects/rhino/app/css/components/sidebar.scss", "../../app/css/home/coull/Projects/rhino/app/css/components/icons.scss"],
  "sourcesContent": ["/**\n * src/css/libhalma/_libhalma.scss\n *\n * Libhalma: A simple, solid and accessible basic library for css\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n\n// Edit as needed\n\n@forward\"utils\";\n\n@forward \"rwd\";\n\n@forward \"type-setting\";\n\n@forward \"colors\";\n\n@forward \"classes\";\n", "@use \"sass:math\";\n/**\n * src/css/mixins/_utils.scss\n *\n * Utility mixins and functions\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n\n/**\n * strip-unit\n *\n * Returns the unitless number\n * From: https://css-tricks.com/snippets/sass/strip-unit-function/\n *\n * @param number\n * @return number\n */\n@function strip-unit ($number) {\n\t@if type-of ($number) == 'number' and not unitless ($number) {\n\t\t@return math.div($number, ($number * 0 + 1));\n\t}\n\t@return $number;\n}\n\n\n\n/**\n * pow\n *\n * Return the number risen to the power of n\n * From: https://css-tricks.com/snippets/sass/power-function/\n *\n * @param number \tThe operator\n * @param exp \t\tThe exponent\n * @return number\n */\n@function pow ($number, $exp) {\n\t$val: 1;\n\t@if $exp > 0 {\n\t\t@for $i from 1 through $exp {\n\t\t\t$val: $val * $number;\n\t\t}\n\t}\n\t@return $val;\n}\n\n/**\n * Calculates the sRGB luma of a colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Math nicked from a great Thoughtbot article by Reda Lemeden:\n * http://robots.thoughtbot.com/closer-look-color-lightness\n */\n\n@function luma($c) {\n\t$-local-red: red(rgba($c, 1));\n\t$-local-green: green(rgba($c, 1));\n\t$-local-blue: blue(rgba($c, 1));\n\n\t@return math.div((0.2126 * $-local-red  + 0.7152 * $-local-green + 0.0722 * $-local-blue), 255);\n}\n\n\n/*\n * Picks a colour from two options based on which one is more visible\n * on the given background colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Usage: color-for-bg($bg-color, $color-1, $color-2)\n */\n\n@function color-for-bg($bg, $c1, $c2) {\n\t$bg-luma: luma($bg);\n\t$c1-luma: luma($c1);\n\t$c2-luma: luma($c2);\n\n\t$c1-diff: abs($bg-luma - $c1-luma);\n\t$c2-diff: abs($bg-luma - $c2-luma);\n\n\t@if $c1-diff > $c2-diff {\n\t\t@return $c1;\n\t}\n\t@else {\n\t\t@return $c2;\n\t}\n}\n\n// Output color in RGB format\n@function to-rgb($color) {\n\t@return unquote(\"rgb(#{red($color)}, #{green($color)}, #{blue($color)})\");\n}\n\n@function display-rgb($color) {\n\t@return to-rgb($color);\n}\n\n// Generate a shadow layer\n@function shadow-layer($elevation, $blur, $opacity, $color) {\n  @return #{($elevation * 0.5)} #{$elevation} #{$blur} #{rgba($color, $opacity)};\n}\n\n// Generate a shadow with 7 layers\n@function shadow($color) {\n  $box-shadow-elevation: 1rem;\n  $box-shadow-blur-strengh: 6rem;\n  $box-shadow-opacity: 0.06;\n\n  @return shadow-layer(\n      $box-shadow-elevation * 0.029,\n      $box-shadow-blur-strengh * 0.029,\n      $box-shadow-opacity * 0.283,\n      $color\n    ),\n    shadow-layer(\n      $box-shadow-elevation * 0.067,\n      $box-shadow-blur-strengh * 0.067,\n      $box-shadow-opacity * 0.4,\n      $color\n    ),\n    shadow-layer(\n      $box-shadow-elevation * 0.125,\n      $box-shadow-blur-strengh * 0.125,\n      $box-shadow-opacity * 0.5,\n      $color\n    ),\n    shadow-layer(\n      $box-shadow-elevation * 0.225,\n      $box-shadow-blur-strengh * 0.225,\n      $box-shadow-opacity * 0.6,\n      $color\n    ),\n    shadow-layer(\n      $box-shadow-elevation * 0.417,\n      $box-shadow-blur-strengh * 0.417,\n      $box-shadow-opacity * 0.717,\n      $color\n    ),\n    shadow-layer($box-shadow-elevation, $box-shadow-blur-strengh, $box-shadow-opacity, $color),\n    0 0 0 0.0625rem #{rgba($color, ($box-shadow-opacity * 0.25))};\n}\n\n\n/*\n * @author Carsten Coull <c.coull@agentur-halma.de>\n *\n * Slope Utilits\n * sets a Graph to use for unit\n *\n * Needs a calc support\n */\n\n/*\n * for fluid type to fit to screen;\n */\n@mixin slope-type($slope, $offset: 1rem) {\n\tfont-size: $offset * (1 + $slope);\n\tfont-size: calc(#{slope-size($slope, $offset)});\n\tline-height: 1em;\n\n\t@include for-size($m) {\n\t\tfont-size: $offset * (2 + $slope);\n\t\tfont-size: calc(#{slope-size($slope, $offset)});\n\t}\n\tline-height: 1em;\n}\n\n@function slope($slope, $offset: 1rem) {\n\t@return (#{$slope} *  100vw + #{$offset});\n}\n\n/*\n * Sets a fluid Unit between to Values\n *\n * $min-size: Minimum Value\n * $max-size: Maximum Value\n * $min-view: Size at which to use $min-size\n * $max-view: Size at which to use $max-size\n *\n * works best with px Unit\n */\n\n@function slope-minmax($min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\t$slope: math.div(($max-size - $min-size), ($max-view - $min-view));\n\t$offset: ($slope * $min-view) - $min-size;\n\t@return calc(#{100 * $slope}vw + #{$offset * -1});\n}\n\n@mixin slope-type-minmax ($min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\tfont-size: $min-size;\n\tline-height: 1.125em;\n\t// margin-bottom: 1.125em;\n\n\t@media (min-width: $min-view) {\n\t\tfont-size: calc(#{slope-minmax($min-size, $max-size, $min-view, $max-view)});\n\t}\n\n\t@media (min-width: $max-view) {\n\t\tfont-size: $max-size;\n\t}\n}\n\n/* Can be used with Custom Proporties */\n@mixin slope-property-minmax ($property, $min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\t#{$property}: $min-size;\n\n\t@media (min-width: $min-view) {\n\t\t#{$property}: calc(#{slope-minmax($min-size, $max-size, $min-view, $max-view)});\n\t}\n\n\t@media (min-width: $max-view) {\n\t\t#{$property}: $max-size;\n\t}\n}\n\n@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {\n\t@each $property in $properties {\n\t\t#{$property}: $min-value;\n\t}\n\n\t@media (min-width: $min-vw) {\n\t\t@each $property in $properties {\n\t\t\t#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});\n\t\t}\n\t}\n\n\t@media (min-width: $max-vw) {\n\t\t@each $property in $properties {\n\t\t\t#{$property}: $max-value;\n\t\t}\n\t}\n}\n\n\n@function rem-to-px($rem) {\n\t@return (strip-unit($rem) * 16) * 1px;\n}\n\n@function px-to-rem($px) {\n\t@return math.div(strip-unit($px), 16) * 1rem;\n}\n\n@function slope-rem-minmax($min-size: 1rem, $max-size: 7.5rem, $min-view: 320px, $max-view: 1920px) {\n\t$slope: math.div(($max-size - $min-size), strip-unit(px-to-rem($max-view) - px-to-rem($min-view)));\n\t$offset: strip-unit($slope * px-to-rem($min-view)) - $min-size;\n\n\t@return clamp(#{$min-size}, (100vw * #{strip-unit($slope)}) - #{$offset}, #{$max-size});\n}\n\n@mixin fixed-ratio ($width, $height) {\n\tdisplay: block;\n\tposition: relative;\n\tmax-width: 100%;\n\t\n\t&::after {\n\t\tcontent: '';\n\t\theight: 0;\n\t\tpadding-bottom: math.div( $height, $width ) * 100%;\n\t\tdisplay: block;\n\t}\n\t\n\t& > *:first-child {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t}\n\n\t@supports(aspect-ratio: 1 / 1) {\n\t\taspect-ratio: math.div( $width, $height );\n\n\t\t&::after {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t& > *:first-child {\n\t\t\tposition: static;\n\t\t}\n\t}\n}\n\n@mixin position ($type, $top: 0, $right: 0, $bottom: 0, $left: 0) {\n\tposition: $type;\n\ttop: $top;\n\tright: $right;\n\tbottom: $bottom;\n\tleft: $left;\n}", "/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n\n@use 'sass:map';\n@use 'settings' as *;\n\n@mixin for-size($size, $direction: false) {\n\t$notFound: true;\n\n\t@if $direction {\n\t\t@if $direction == 'up' {\n\t\t\t$notFound: false;\n\t\t\t@media (min-width: $size) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if $direction == 'down' {\n\t\t\t$notFound: false;\n\t\t\t@media (max-width: $size) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t} @else {\n\t\t@each $breakpoint, $width in $breakpoints {\n\t\t\t@if $size == #{$breakpoint}-up {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (min-width: #{map.get($width, 'breakpoint')}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t} @else if $size == #{$breakpoint}-down {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (max-width: #{map.get($width, 'breakpoint')}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t} @else if $size == $breakpoint {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (max-width: #{map.get($width, 'breakpoint') - 1}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@if $notFound {\n\t\t@error \"Breakpoint: no width for #{$size} devined\";\n\t}\n}\n", "/**\n * _settings.scss\n *\n * Use Sass variables and custom properties as appropriate, both are possible\n */\n\n/********\n * Typo *\n ********/\n\n@use \"sass:map\";\n@use \"sass:color\";\n@use \"sass:math\";\n@use \"swu\" as *; // use to create swu theme\n\n$use-type-scale: false;\n$vertical-unit: 1.5rem;\n$modular-scale-ratio: 1.125;\n\n$font-sizes: (\n    100: 0.8,\n    200: 1,\n    300: 1.125,\n    400: 1.2,\n    500: 1.4,\n    600: 1.75,\n    700: 2.1,\n    800: 2.8,\n    900: 3.2,\n);\n\n/************\n * Measures *\n ************/\n$min-header-height: 5rem;\n$max-header-height: 6.5rem;\n\n$inner-bound-width: 68rem;\n$outer-bound-width: 86rem;\n\n$min-supported-screen-width: 320px;\n$max-supported-screen-width: 3440px;\n\n$spacing: 1rem;\n\n$spacings: (\n    100: $spacing * 0.25,\n    200: $spacing * 0.5,\n    300: $spacing,\n    400: $spacing * 2,\n    500: $spacing * 4,\n    600: $spacing * 6,\n    700: $spacing * 8,\n    800: $spacing * 10,\n    900: $spacing * 14,\n);\n\n/**********\n * Colors *\n **********/\n\n$colors: (\n   \tprimary: hsl(162, 68%, 58%),\n\tsecondary: hsl(194, 53%, 55%),\n\tforeground: (\n\t\t100: hsl(0, 0%, 0%),\n\t\t200: hsl(0, 0%, 5%),\n\t\t300: hsl(0, 0%, 10%),\n\t\t400: hsl(0, 0%, 15%),\n\t\t500: hsl(0, 0%, 20%),\n\t\t600: hsl(0, 0%, 25%),\n\t\t700: hsl(0, 0%, 30%),\n\t\t800: hsl(0, 0%, 35%),\n\t\t900: hsl(0, 0%, 40%),\n\t),\n\tbackground: (\n\t\t100: hsl(0, 0%, 100%),\n\t\t200: hsl(0, 0%, 95%),\n\t\t300: hsl(0, 0%, 90%),\n\t\t400: hsl(0, 0%, 85%),\n\t\t500: hsl(0, 0%, 80%),\n\t\t600: hsl(0, 0%, 75%),\n\t\t700: hsl(0, 0%, 70%),\n\t\t800: hsl(0, 0%, 65%),\n\t\t900: hsl(0, 0%, 60%),\n\t),\n\tneutral: (\n\t\t100: hsl(0, 0%, 70%),\n\t\t200: hsl(0, 0%, 65%),\n\t\t300: hsl(0, 0%, 60%),\n\t\t400: hsl(0, 0%, 55%),\n\t\t500: hsl(0, 0%, 50%),\n\t\t600: hsl(0, 0%, 45%),\n\t\t700: hsl(0, 0%, 40%),\n\t\t800: hsl(0, 0%, 35%),\n\t\t900: hsl(0, 0%, 30%),\n\t),\n\tsuccess: (\n\t\t100: #99d49b,\n\t\t200: #78c77c,\n\t\t300: #58b95c,\n\t\t400: #43a047,\n\t\t500: #317534,\n\t\t600: #285f2a,\n\t\t700: #225124,\n\t\t800: #1c431e,\n\t\t900: #132d14,\n\t),\n\twarning: (\n\t\t100: #f4e6bd,\n\t\t200: #efd994,\n\t\t300: #ebcb6a,\n\t\t400: #e7be40,\n\t\t500: #d5a515,\n\t\t600: #bd920e,\n\t\t700: #af8607,\n\t\t800: #a27a00,\n\t\t900: #846300,\n\t),\n\terror: (\n\t\t100: #e8bdbc,\n\t\t200: #de9a98,\n\t\t300: #d47674,\n\t\t400: #cc514e,\n\t\t500: #b0302d,\n\t\t600: #9b2623,\n\t\t700: #901d1a,\n\t\t800: #841411,\n\t\t900: #6d0c0a,\n\t),\n\tprimary-shade: 600, \n\tsecondary-shade: 600,\n\tforeground-shade: 400,\n\tbackground-shade: 400,\n\tneutral-shade: 400,\n\tsuccess-shade: 400,\n\twarning-shade: 400,\n\terror-shade: 400,\n);\n\n@function color-map($name, $color) {\n    $min-color: color.adjust($color, $lightness: -40%);\n    $max-color: color.adjust($color, $lightness: 30%);\n    $primary-colors: ();\n\n    @for $i from 1 through 9 {\n        $key: $i * 100;\n        $weight: $i * 10%;\n\n        $color: color.mix($min-color, $max-color, $weight);\n        $primary-colors: map.set(\n            $primary-colors,\n            $key,\n            color.adjust($color, $saturation: $weight - 10)\n        );\n    }\n\n    @return map.set($colors, $name, $primary-colors);\n}\n\n$colors: color-map(\"primary\", map.get($colors, \"primary\"));\n$colors: color-map(\"secondary\", map.get($colors, \"secondary\"));\n\n$default-colors: $colors !default;\n\n$black: #000;\n$white: #fff;\n\n/**********\n * Border *\n **********/\n\n$border: (\n    width: 2px,\n    radius: 4px,\n    color: currentColor,\n    type: solid,\n);\n\n$outline: (\n    width: 4px,\n);\n\n/********************\n * Options/Switches *\n ********************/\n$debug-base-line-grid: false;\n\n// body-text in full-width containers aligns with outer-bound\n$full-width-fix: true;\n\n// header collapses on scroll-down\n$collapsable-header: true;\n\n// subtracts header height from screen-heighht\n$substract-header-height: false;\n\n// fade in elements when page has loaded\n$fade-in-transition: false;\n\n// loading screen type [spinner, dots, bars]\n$loader: \"spinner\";\n\n// sets the color for header and hero to contrast-color\n$start-dark-background: false;\n\n// sets the style for the navbar [default, folding]\n$nav-style: \"default\";\n\n// Toggle wether all ul & ol elements will recive an Overwrite\n$list-reset: false;\n\n// --- pico ---\n\n// Theme color\n$theme-color-primary: \"custom-primary\"; // amber, azure, blue, cyan, fuchsia, green, grey, indigo, jade, lime, orange, pink, pumpkin, purple, red, sand, slate, violet, yellow, zinc\n$theme-color-secondary: \"custom-secondary\"; // amber, azure, blue, cyan, fuchsia, green, grey, indigo, jade, lime, orange, pink, pumpkin, purple, red, sand, slate, violet, yellow, zinc\n$theme-color-contrast: \"default-contrast\"; // amber, azure, blue, cyan, fuchsia, green, grey, indigo, jade, lime, orange, pink, pumpkin, purple, red, sand, slate, violet, yellow, zinc\n\n// Prefix for CSS variables\n$css-var-prefix: \"--\"; // Must start with \"--\", change to \"--pico-\" for Namespacing\n\n// Define the root element used to target <header>, <main>, <footer>\n// with $enable-semantic-container and $enable-responsive-spacings\n$semantic-root-element: \"body\";\n\n// Enable <header>, <main>, <footer> inside $semantic-root-element as containers\n$enable-semantic-container: true;\n\n// Enable a centered viewport for <header>, <main>, <footer> inside $semantic-root-element\n// Fluid layout if disabled\n$enable-viewport: true;\n\n// Enable responsive spacings for <header>, <main>, <footer>, <section>, <article>\n// Fixed spacings by default\n$enable-responsive-spacings: false;\n\n// Enable responsive typography\n// Fixed root element size (rem) if disabled\n$enable-responsive-typography: false;\n\n// Enable .classes\n// .classless version if disabled\n$enable-classes: true;\n\n// Enable transitions\n$enable-transitions: true;\n\n// Enable overriding with !important\n$enable-important: true;\n\n// Optional parent selector\n// If defined, all HTML tags are wrapped with this selector\n// :root is not wrapped\n$parent-selector: \"\";\n\n// Breakpoints, viewports and root font size\n$breakpoints: (\n    // Small (landscape phones)\n    // Font size: 17px\n    sm:\n        (\n            breakpoint: 576px,\n            viewport: 510px,\n            root-font-size: 100%,\n        ),\n\n    // Medium (tablets)\n    // Font size: 18px\n    md:\n        (\n            breakpoint: 768px,\n            viewport: 700px,\n            root-font-size: 100%,\n        ),\n\n    // Large\n    // Font size: 19px\n    lg:\n        (\n            breakpoint: 1024px,\n            viewport: 950px,\n            root-font-size: 100%,\n        ),\n\n    // Extra large\n    // Font size: 20px\n    xl:\n        (\n            breakpoint: 1280px,\n            viewport: 1200px,\n            root-font-size: 100%,\n        ),\n\n    // Extra extra large\n    // Font size: 21px\n    xxl:\n        (\n            breakpoint: 1536px,\n            viewport: 1450px,\n            root-font-size: 100%,\n        )\n);\n\n// Modules to export\n$modules: (\n    // Theme\n    \"themes/default\": true,\n\n    // Layout\n    \"layout/document\": true,\n    \"layout/landmarks\": false,\n    \"layout/container\": false,\n    \"layout/section\": true,\n    \"layout/grid\": true,\n    \"layout/overflow-auto\": true,\n\n    // Content\n    \"content/link\": true,\n    \"content/typography\": true,\n    \"content/embedded\": true,\n    \"content/button\": true,\n    \"content/table\": true,\n    \"content/code\": true,\n    \"content/figure\": true,\n    \"content/miscs\": true,\n\n    // Forms\n    \"forms/basics\": true,\n    \"forms/checkbox-radio-switch\": true,\n    \"forms/input-color\": true,\n    \"forms/input-date\": true,\n    \"forms/input-file\": true,\n    \"forms/input-range\": true,\n    \"forms/input-search\": true,\n\n    // Components\n    \"components/accordion\": true,\n    \"components/card\": true,\n    \"components/dropdown\": true,\n    \"components/group\": true,\n    \"components/loading\": true,\n    \"components/modal\": true,\n    \"components/nav\": true,\n    \"components/progress\": true,\n    \"components/tooltip\": true,\n\n    // Utilities\n    \"utilities/accessibility\": true,\n    \"utilities/reduce-motion\": true\n);\n", "/**\n * src/css/libhalma/_vertical_rhythm.scss\n *\n * @author Carsten Coull <c.coull@agentur-halma.de>\n * @package libhalma\n */\n@use \"sass:math\";\n@use \"sass:map\";\n@use 'settings' as *;\n\n$font-sizes: (\n\t100: 0.5,\n\t200: 0.8,\n\t400: 1,\n\t500: 1.2,\n\t600: 1.4,\n\t700: 1.75,\n\t800: 2.1,\n\t900: 3.8,\n) !default;\n\n@if $use-type-scale {\n\n\t$weight: 100;\n\t$font-sizes: ();\n\n\t@for $weight from 1 to 10 {\n\t\t$delta: $weight - 4;\n\t\t$value: math.pow($modular-scale-ratio, $delta);\n\t\t$font-sizes: map-merge($font-sizes, ($weight * 100: $value));\n\t}\n}\n\n\n@mixin type-setting($level: 400, $margin-bottom: 'none') {\n\n\t$font-size: map-get($font-sizes, $level);\n\n\t@if type-of($font-size) != 'number' {\n\t\t@debug \"Could not get font-size vor level \" + $level;\n\t}\n\n\t// Strip unit\n\t$vu: math.div($vertical-unit, $vertical-unit * 0 + 1);\n\t$line-height: math.div($vu, $font-size);\n\n\t// Make sure line-height is at least 1 times the vertical unit\n\t@if $line-height > 0 { // prevent endless loop if somehow line-height is zero or negative\n\t\t@while $line-height < 1 {\n\t\t\t$line-height: $line-height * 1.5; // Steps up half a vertical unit at each step\n\t\t}\n\t\t// $line-height: math.div($line-height, 1.41421);\n\t}\n\n\tfont-size: $font-size + rem;\n\tline-height: $line-height + em;\n\n\t@if $margin-bottom != 'none' {\n\t\tmargin-bottom: ($line-height * $margin-bottom) + rem;\n\t}\n}\n\n\n$debug-base-line-grid: true;\n$visual-base-line-grid-offset: -16px !default;\n$visual-base-line-grid-above: true !default;\n\n// Visual baseline grid for debugging (\"Grundlinienraster\")\n@if $debug-base-line-grid {\n\tbody {\n\t\tposition: relative;\n\t}\n\t.debug-base-line-grid {\n\t\tbackground-image: linear-gradient(\n\t\t\tto bottom,\n\t\t\ttransparent 0,\n\t\t\ttransparent calc(#{$vertical-unit}),\n\t\t\trgba(tomato, 0.1) calc(#{$vertical-unit}),\n\t\t\trgba(tomato, 0.1)\n\t\t);\n\t\tbackground-size: 100% (2 * $vertical-unit);\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tpointer-events: none;\n\t\t@if $visual-base-line-grid-above {\n\t\t\tz-index: 32766;\n\t\t}\n\t\t@else {\n\t\t\tz-index: 0;\n\t\t}\n\t\ttop: $visual-base-line-grid-offset;\n\t}\n}\n\n", "/**\n * src/css/libhalma/_libhalma.scss\n *\n * Libhalma: A simple, solid and accessible basic library for css\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n/**\n * src/css/mixins/_utils.scss\n *\n * Utility mixins and functions\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n/**\n * strip-unit\n *\n * Returns the unitless number\n * From: https://css-tricks.com/snippets/sass/strip-unit-function/\n *\n * @param number\n * @return number\n */\n/**\n * pow\n *\n * Return the number risen to the power of n\n * From: https://css-tricks.com/snippets/sass/power-function/\n *\n * @param number \tThe operator\n * @param exp \t\tThe exponent\n * @return number\n */\n/**\n * Calculates the sRGB luma of a colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Math nicked from a great Thoughtbot article by Reda Lemeden:\n * http://robots.thoughtbot.com/closer-look-color-lightness\n */\n/*\n * Picks a colour from two options based on which one is more visible\n * on the given background colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Usage: color-for-bg($bg-color, $color-1, $color-2)\n */\n/*\n * @author Carsten Coull <c.coull@agentur-halma.de>\n *\n * Slope Utilits\n * sets a Graph to use for unit\n *\n * Needs a calc support\n */\n/*\n * for fluid type to fit to screen;\n */\n/*\n * Sets a fluid Unit between to Values\n *\n * $min-size: Minimum Value\n * $max-size: Maximum Value\n * $min-view: Size at which to use $min-size\n * $max-view: Size at which to use $max-size\n *\n * works best with px Unit\n */\n/* Can be used with Custom Proporties */\n/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n/**\n * _settings.scss\n *\n * Use Sass variables and custom properties as appropriate, both are possible\n */\n/********\n * Typo *\n ********/\n/************\n * Measures *\n ************/\n/**********\n * Colors *\n **********/\n/**********\n * Border *\n **********/\n/********************\n * Options/Switches *\n ********************/\n/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n/**\n * src/css/libhalma/_vertical_rhythm.scss\n *\n * @author Carsten Coull <c.coull@agentur-halma.de>\n * @package libhalma\n */\nbody {\n  position: relative;\n}\n\n.debug-base-line-grid {\n  background-image: linear-gradient(to bottom, transparent 0, transparent calc(1.5rem), rgba(255, 99, 71, 0.1) calc(1.5rem), rgba(255, 99, 71, 0.1));\n  background-size: 100% 3rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none;\n  z-index: 32766;\n  top: -16px;\n}\n\n/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n:root {\n  --primary-100: hsl(201, 64%, 96%);\n  --primary-200: hsl(199, 61%, 92%);\n  --primary-300: hsl(200, 62%, 78%);\n  --primary-400: hsl(200, 63%, 63%);\n  --primary-500: hsl(200, 63%, 51%);\n  --primary-600: hsl(200, 100%, 38%);\n  --primary-700: hsl(205, 81%, 45%);\n  --primary-800: hsl(207, 85%, 34%);\n  --primary-900: hsl(208, 89%, 24%);\n  --primary: hsl(200, 100%, 38%);\n  --secondary-100: hsl(127, 43%, 96%);\n  --secondary-200: hsl(124, 46%, 93%);\n  --secondary-300: hsl(123, 46%, 80%);\n  --secondary-400: hsl(123, 45%, 66%);\n  --secondary-500: hsl(123, 46%, 55%);\n  --secondary-600: hsl(123, 59%, 44%);\n  --secondary-700: hsl(124, 64%, 33%);\n  --secondary-800: hsl(124, 68%, 22%);\n  --secondary-900: hsl(124, 72%, 11%);\n  --secondary: hsl(123, 59%, 44%);\n  --foreground-100: hsl(0, 0%, 10%);\n  --foreground-200: hsl(0, 0%, 20%);\n  --foreground-300: hsl(0, 0%, 30%);\n  --foreground-400: hsl(0, 0%, 40%);\n  --foreground-500: hsl(0, 0%, 50%);\n  --foreground-600: hsl(0, 0%, 60%);\n  --foreground-700: hsl(0, 0%, 70%);\n  --foreground-800: hsl(0, 0%, 80%);\n  --foreground-900: hsl(0, 0%, 90%);\n  --foreground: hsl(0, 0%, 40%);\n  --background-100: hsl(0, 0%, 10%);\n  --background-200: hsl(0, 0%, 20%);\n  --background-300: hsl(0, 0%, 30%);\n  --background-400: hsl(0, 0%, 40%);\n  --background-500: hsl(0, 0%, 50%);\n  --background-600: hsl(0, 0%, 60%);\n  --background-700: hsl(0, 0%, 70%);\n  --background-800: hsl(0, 0%, 80%);\n  --background-900: hsl(0, 0%, 90%);\n  --background: hsl(0, 0%, 40%);\n  --neutral-100: hsl(0, 0%, 10%);\n  --neutral-200: hsl(0, 0%, 20%);\n  --neutral-300: hsl(0, 0%, 30%);\n  --neutral-400: hsl(0, 0%, 40%);\n  --neutral-500: hsl(0, 0%, 50%);\n  --neutral-600: hsl(0, 0%, 60%);\n  --neutral-700: hsl(0, 0%, 70%);\n  --neutral-800: hsl(0, 0%, 80%);\n  --neutral-900: hsl(0, 0%, 90%);\n  --neutral: hsl(0, 0%, 40%);\n  --success-100: hsl(200, 100%, 80%);\n  --success-200: hsl(200, 100%, 70%);\n  --success-300: hsl(200, 100%, 58%);\n  --success-400: hsl(123, 59%, 44%);\n  --success-500: hsl(200, 100%, 34%);\n  --success-600: hsl(200, 100%, 28%);\n  --success-700: hsl(200, 100%, 18%);\n  --success-800: hsl(200, 100%, 8%);\n  --success-900: hsl(200, 100%, 0%);\n  --success: hsl(123, 59%, 44%);\n  --warning-100: hsl(200, 100%, 80%);\n  --warning-200: hsl(200, 100%, 70%);\n  --warning-300: hsl(200, 100%, 58%);\n  --warning-400: hsl(123, 59%, 44%);\n  --warning-500: hsl(200, 100%, 34%);\n  --warning-600: hsl(200, 100%, 28%);\n  --warning-700: hsl(200, 100%, 18%);\n  --warning-800: hsl(200, 100%, 8%);\n  --warning-900: hsl(200, 100%, 0%);\n  --warning: hsl(123, 59%, 44%);\n  --error-100: hsl(200, 100%, 80%);\n  --error-200: hsl(200, 100%, 70%);\n  --error-300: hsl(200, 100%, 58%);\n  --error-400: hsl(123, 59%, 44%);\n  --error-500: hsl(200, 100%, 34%);\n  --error-600: hsl(200, 100%, 28%);\n  --error-700: hsl(200, 100%, 18%);\n  --error-800: hsl(200, 100%, 8%);\n  --error-900: hsl(200, 100%, 0%);\n  --error: hsl(123, 59%, 44%);\n  --white: #fff;\n  --black: #000;\n}\n\n/**\n * src/css/libhalma/_classes.scss\n *\n * Predefined utility classes\n *\n * @author C.Coull <c.coull@agentur-halma.de>\n * @author J. Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-27\n */\n/**\n * From: EveryLayout\n */\n/**\n * From: EveryLayout\n */\n/**\n * The Cluster\n *\n * https://every-layout.dev/demos/cluster-ctas/\n *\n * We can use `gap` now on flexbox items, so it gets really easy now :-)\n */\n/**\n * The Stack\n *\n * Spacing for vertically stacked blocks\n */\n#main > .row,\n#main > .content {\n  max-width: var(--inner-bound-width);\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: var(--outer-bound);\n  padding-right: var(--outer-bound);\n}\n@media screen and (min-width: var(--inner-bound-width)) {\n  #main > .row,\n  #main > .content {\n    box-sizing: content-box;\n  }\n}\n\n.pagination {\n  list-style: none;\n  display: flex;\n  gap: var(--spacing);\n}\n.pagination li {\n  list-style: none;\n}\n\n.float-right {\n  float: right;\n}\n\n.row {\n  display: flex;\n  flex-direction: row-reverse;\n  gap: var(--spacing-400);\n}\n\n.column-80 {\n  flex: 1 1 80%;\n}\n\n.side-nav {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing);\n}\n\nnav details.dropdown {\n  margin: 0;\n}\n\n.table-responsive {\n  overflow: auto;\n}\n\n.pages h1 {\n  padding: var(--rhino-margin-300) var(--rhino-margin-300);\n  font-weight: 800;\n}\n.pages .page-list {\n  margin-top: var(--spacing-500);\n  margin-left: var(--spacing);\n  margin-inline: 0;\n}\n.pages .page-list,\n.pages .page-list ul,\n.pages .page-list li {\n  position: relative;\n  list-style: none;\n  list-style: none;\n}\n.pages .page-list ul {\n  margin-left: var(--spacing);\n}\n.pages .page-list::before,\n.pages .page-list ul::before {\n  content: \"\";\n  display: block;\n  width: var(--border-width);\n  height: 100%;\n  background-color: var(--backdrop-color);\n  position: absolute;\n  top: 0;\n  left: calc(var(--spacing) * -1);\n}\n.pages > .page-list > .page-item > .page-item__body {\n  padding-inline: 0;\n}\n.pages .page-item {\n  margin: 0;\n}\n.pages .page-item__body {\n  position: relative;\n  margin: var(--spacing) 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: var(--backdrop-color);\n}\n.pages .page-item__body a {\n  font-weight: 800;\n  margin-bottom: 0;\n}\n.pages .page-item__body::before {\n  content: \"\";\n  display: block;\n  width: calc(var(--spacing) * 1);\n  height: var(--border-width);\n  background-color: var(--backdrop-color);\n  position: absolute;\n  top: 50%;\n  left: calc(var(--spacing) * -1);\n}\n.pages .page-item__actions {\n  display: flex;\n  gap: var(--spacing-400);\n}\n\n.sidebar {\n  flex: 1 1 100%;\n  background: lightblue;\n  max-width: 20rem;\n}\n.sidebar__wrapper {\n  display: flex;\n  flex: 1 1 100%;\n}\n\n.icon-link {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1ch;\n}\n.icon-link svg {\n  height: 1lh;\n  padding: 0;\n}\n\na.icon-link:not(.button) {\n  gap: 0.5ch;\n}\na.icon-link:not(.button) svg {\n  height: 1em;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */", "@use 'sass:color';\n@use 'sass:string';\n@use 'sass:list';\n@use 'sass:map';\n@use 'settings' as *;\n\n$default-colors: (\n    primary: (\n\t\t100: hsl(201, 64%, 96%),\n\t\t200: hsl(199, 61%, 92%),\n\t\t300: hsl(200, 62%, 78%),\n\t\t400: hsl(200, 63%, 63%),\n\t\t500: hsl(200, 63%, 51%),\n\t\t600: hsl(200, 100%, 38%),\n\t\t700: hsl(205, 81%, 45%),\n\t\t800: hsl(207, 85%, 34%),\n\t\t900: hsl(208, 89%, 24%),\n\t),\n    secondary: (\n\t\t100: hsl(127, 43%, 96%),\n\t\t200: hsl(124, 46%, 93%),\n\t\t300: hsl(123, 46%, 80%),\n\t\t400: hsl(123, 45%, 66%),\n\t\t500: hsl(123, 46%, 55%),\n\t\t600: hsl(123, 59%, 44%),\n\t\t700: hsl(124, 64%, 33%),\n\t\t800: hsl(124, 68%, 22%),\n\t\t900: hsl(124, 72%, 11%),\n\t),\n\tforeground: (\n\t\t100: hsl(0, 0%, 10%),\n\t\t200: hsl(0, 0%, 20%),\n\t\t300: hsl(0, 0%, 30%),\n\t\t400: hsl(0, 0%, 40%),\n\t\t500: hsl(0, 0%, 50%),\n\t\t600: hsl(0, 0%, 60%),\n\t\t700: hsl(0, 0%, 70%),\n\t\t800: hsl(0, 0%, 80%),\n\t\t900: hsl(0, 0%, 90%),\n\t),\n\tbackground: (\n\t\t100: hsl(0, 0%, 10%),\n\t\t200: hsl(0, 0%, 20%),\n\t\t300: hsl(0, 0%, 30%),\n\t\t400: hsl(0, 0%, 40%),\n\t\t500: hsl(0, 0%, 50%),\n\t\t600: hsl(0, 0%, 60%),\n\t\t700: hsl(0, 0%, 70%),\n\t\t800: hsl(0, 0%, 80%),\n\t\t900: hsl(0, 0%, 90%),\n\t),\n\tneutral: (\n\t\t100: hsl(0, 0%, 10%),\n\t\t200: hsl(0, 0%, 20%),\n\t\t300: hsl(0, 0%, 30%),\n\t\t400: hsl(0, 0%, 40%),\n\t\t500: hsl(0, 0%, 50%),\n\t\t600: hsl(0, 0%, 60%),\n\t\t700: hsl(0, 0%, 70%),\n\t\t800: hsl(0, 0%, 80%),\n\t\t900: hsl(0, 0%, 90%),\n\t),\n\tsuccess: (\n\t\t100: hsl(200, 100%, 80%),\n\t\t200: hsl(200, 100%, 70%),\n\t\t300: hsl(200, 100%, 58%),\n\t\t400: hsl(123, 59%, 44%),\n\t\t500: hsl(200, 100%, 34%),\n\t\t600: hsl(200, 100%, 28%),\n\t\t700: hsl(200, 100%, 18%),\n\t\t800: hsl(200, 100%, 8%),\n\t\t900: hsl(200, 100%, 0%),\n\t),\n\twarning: (\n\t\t100: hsl(200, 100%, 80%),\n\t\t200: hsl(200, 100%, 70%),\n\t\t300: hsl(200, 100%, 58%),\n\t\t400: hsl(123, 59%, 44%),\n\t\t500: hsl(200, 100%, 34%),\n\t\t600: hsl(200, 100%, 28%),\n\t\t700: hsl(200, 100%, 18%),\n\t\t800: hsl(200, 100%, 8%),\n\t\t900: hsl(200, 100%, 0%),\n\t),\n\terror: (\n\t\t100: hsl(200, 100%, 80%),\n\t\t200: hsl(200, 100%, 70%),\n\t\t300: hsl(200, 100%, 58%),\n\t\t400: hsl(123, 59%, 44%),\n\t\t500: hsl(200, 100%, 34%),\n\t\t600: hsl(200, 100%, 28%),\n\t\t700: hsl(200, 100%, 18%),\n\t\t800: hsl(200, 100%, 8%),\n\t\t900: hsl(200, 100%, 0%),\n\t),\n\tprimary-shade: 600, \n\tsecondary-shade: 600,\n\tforeground-shade: 400,\n\tbackground-shade: 400,\n\tneutral-shade: 400,\n\tsuccess-shade: 400,\n\twarning-shade: 400,\n\terror-shade: 400,\n) !default;\n\n$weights: (\n\t100,\n\t200,\n\t300,\n\t400,\n\t500,\n\t600,\n\t700,\n\t800,\n\t900,\n) !default;\n\n$keys: (\n\t\"primary\", \n\t\"secondary\",\n\t\"foreground\",\n\t\"background\",\n\t\"neutral\",\n\t\"success\",\n\t\"warning\",\n\t\"error\",\n) !default;\n\n\n// Black & White\n$black: #000 !default;\n$white: #fff !default;\n\n\n@function color($name, $weight: null) {\n\t// $multi: map.get($saturation-multiplication, $name);\n\t// $shade: clamp(map.get($saturation, $weight) * $multi, -100%, 100%);\n\t// $light: map.get($lightness, $weight);\n\t@if ($weight == null) {\n\t\t$weight: map.get($default-colors, \"#{$name}-shade\");\n\t}\n\n\t$color: map.get($default-colors, $name);\n\t$return: map.get($color, $weight);\n\n\t@if type-of($return)==\"color\" {\n\t\t// @debug \"is a Color!\";\n\t\t@return $return;\n\t}\n\n\t@else {\n\t\t@error \"not a Color!\";\n\t}\n\n\t@return \"\";\n}\n\n:root {\n\t@each $key in $keys {\n\t\t@each $weight in $weights {\n\t\t\t$current-color: color($key, $weight);\n\t\t\t\n\t\t\t--#{$key}-#{$weight}: #{$current-color};\n\t\t}\n\n\t\t--#{$key}: #{color($key)};\n\t}\n\n\t--white: #{$white};\n\t--black: #{$black};\n}\n\n$grey-100: color(\"neutral\", 100);\n$grey-200: color(\"neutral\", 200);\n$grey-300: color(\"neutral\", 300);\n$grey-400: color(\"neutral\", 400);\n$grey-500: color(\"neutral\", 500);\n$grey-600: color(\"neutral\", 600);\n$grey-700: color(\"neutral\", 700);\n$grey-800: color(\"neutral\", 800);\n$grey-900: color(\"neutral\", 900);\n\n$primary-600: color(\"primary\", 400);\n$primary-700: color(\"primary\", 700);\n\n$secondary-500: color(\"secondary\", 500);\n$secondary-600: color(\"secondary\", 400);\n$secondary-700: color(\"secondary\", 700);\n\n$amber-100: color(\"warning\", 100);\n$amber-300: color(\"warning\", 300);\n$amber-900: color(\"warning\", 900);\n\n$green-600: color(\"success\", 600);\n$green-700: color(\"success\", 700);\n$green-800: color(\"success\", 800);\n\n$red-700: color(\"error\", 700);\n$red-800: color(\"error\", 800);\n$red-900: color(\"error\", 900);\n", "/**\n * src/css/libhalma/_classes.scss\n *\n * Predefined utility classes\n *\n * @author C.Coull <c.coull@agentur-halma.de>\n * @author J. Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-27\n */\n\n// Screenreader only\n@mixin sr-only($visible-on-focus: true) {\n\t// color: transparent;\n\tdisplay: inline-block;\n\topacity: 0;\n\tbackground: none;\n\tposition: absolute;\n\tline-height: 0;\n\tfont-size: 0;\n\toverflow: hidden;\n\twidth: 2px;\n\theight: 2px;\n\tmargin: -1px;\n\n\t@if $visible-on-focus {\n\t\t&:focus,\n\t\t&:active {\n\t\t\topacity: 1;\n\t\t\t// color: inherit;\n\t\t\tfont-size: inherit;\n\t\t\tline-height: inherit;\n\t\t\twidth: auto;\n\t\t\twidth: max-content;\n\t\t\theight: auto;\n\t\t\theight: max-content;\n\t\t\tmargin: 0;\n\t\t\tz-index: 1;\n\t\t}\n\t}\n}\n\n@mixin bound($bound-width: 64rem, $padding: false) {\n\tmax-width: $bound-width;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\t\n\t@media screen and (min-width: $bound-width) {\n\t\tbox-sizing: content-box; // Yes ;-) see EveryLayout: Center\n\t}\n\t\n\t@if $padding {\n\t\tpadding-left: $padding;\n\t\tpadding-right: $padding;\n\t}\n}\n\n\n// Take scrollbar-width in to account\n// @see https://destroytoday.com/blog/100vw-and-the-horizontal-overflow-you-probably-didnt-know-about\n@mixin full-width($scrollbar-width: 0) {\n\t--half-screen-width: calc((100vw - #{$scrollbar-width}) / 2);\n\tmargin-left: calc(50% - var(--half-screen-width));\n\tmargin-right: calc(50% - var(--half-screen-width));\n}\n\n@mixin skip-link {\n\tposition: fixed;\n\tz-index: 200;\n\ttop: 0;\n\tleft: 50%;\n\ttransform: translate(-50%, -200%);\n\ttransition: transform 300ms ease-in-out;\n\t\n\t&:focus {\n\t\ttransform: translate(-50%, 0%);\n\t}\n}\n\n@mixin list-style-none {\n\tlist-style: none;\n\tpadding-left: 0;\n\t\n\tli {\n\t\tlist-style: none;\n\t\tposition: static;\n\t\tpadding: 0;\n\t\t\n\t\t&::before, &::marker {\n\t\t\tcontent: none;\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n// set thumb and Background Color\n// use on html to set global\n// Webkit and Chromium will ignore color when size isn't set\n@mixin scrollbars(\n\t$foreground-color: #999,\n  \t$background-color: #333,\n  \t$size: false\n) {\n\t@if $size {\n\t\t// For Chrome & Safari\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t}\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n    background: $foreground-color;\n  }\n  &::-webkit-scrollbar-track {\n    background: var(--background-color);\n  }\n\n  // Standard version (Firefox only for now)\n  scrollbar-color: $foreground-color var(--background-color);\n}\n\n/**\n * From: EveryLayout\n */\n$box-color: var(--color) !default;\n$box-background: var(--muted-border-color) !default;\n$box-padding: var(--spacing) !default;\n$box-border-radius: var(--border-radius) !default;\n\n@mixin box(\n  $color: $box-color,\n  $background: $box-background,\n  $padding: $box-padding,\n  $border-radius: $box-border-radius,\n) {\n  padding: $padding;\n  color: $color;\n  background-color: $background;\n  border-radius: $border-radius;\n}\n\n/**\n * From: EveryLayout\n */\n@mixin center($max-width: false) {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\t@if $max-width {\n\t\tmax-width: $max-width;\n\t}\n}\n\n/**\n * The Cluster\n *\n * https://every-layout.dev/demos/cluster-ctas/\n *\n * We can use `gap` now on flexbox items, so it gets really easy now :-)\n */\n\n$cluster-spacing: 1rem !default;\n$cluster-gap: true;\n\n@mixin cluster($spacing: $cluster-spacing, $use-gap: $cluster-gap) {\n  @if $use-gap {\n    gap: $spacing;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n  } @else {\n    > * {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n      align-items: center;\n      margin: calc(#{$spacing} / 2 * -1);\n    }\n  }\n\n  @if $use-gap != true {\n    > * > * {\n      margin: calc(#{$spacing} / 2);\n    }\n  }\n}\n\n@mixin cover {\n  display: flex;\n  flex-direction: column;\n  min-block-size: var(--screen-height, 100vh);\n  padding: 1rem;\n\n  & > * {\n    margin-block: 1rem;\n  }\n  \n  & > :first-child:not(h1) {\n    margin-block-start: 0;\n  }\n  \n  & > :last-child:not(h1) {\n    margin-block-end: 0;\n  }\n  \n  & > h1 {\n    margin-block: auto;\n  }\n}\n\n@mixin icon($stroke: none, $vertical-align: -0.01em, $space: 0.5em) {\n\tdisplay: inline-block;\n\theight: 0.75em;\n\twidth: 0.75em;\n\t/* ↓ Override the em value with `1cap`  where `cap` is supported */  \n\theight: 1cap;\n\twidth: 1cap;\n\toverflow: visible;\n\tvertical-align: $vertical-align;\n\t\n\tsvg {\n\t\tfill: currentColor !important;\n\t\tstroke: $stroke;\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n}\n\n@mixin with-icon($space: 0.5em) {\n\t/* ↓ Set the `inline-flex` context,  which eliminates the word space */\n\tdisplay: inline-flex;\n\talign-items: center;\n  gap: var(--space, #{$space});\n}\n\n/**\n * The Stack\n *\n * Spacing for vertically stacked blocks\n */\n\n$stack-spacing: 1rem !default;\n\n@mixin stack($spacing: $stack-spacing) {\n\t> * + * {\n\t\tmargin-top: $spacing;\n\t}\n}\n\n\n", "@use \"library\" as *;\n\n#main > {\n\t.row,\n\t.content {\n\t\t@include bound(var(--inner-bound-width), var(--outer-bound));\n\t}\n}\n\n.pagination {\n\tlist-style: none;\n\tdisplay: flex;\n\tgap: var(--spacing);\n\n\tli {\n\t\tlist-style: none;\n\t}\n}\n\n.float-right {\n\tfloat: right;\n}\n\n.row {\n\tdisplay: flex;\n\tflex-direction: row-reverse;\n\tgap: var(--spacing-400);\n}\n\n.column-80 {\n\tflex: 1 1 80%;\n}\n\n.side-nav {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: var(--spacing);\n}\n\nnav details.dropdown {\n\tmargin: 0;\n}\n\n.table-responsive {\n  overflow: auto;\n}", ".pages {\n\th1 {\n\t\tpadding: var(--rhino-margin-300) var(--rhino-margin-300);\n\t\tfont-weight: 800;\n\t}\n\n\t.page-list {\n\t\tmargin-top: var(--spacing-500);\n\t\tmargin-left: var(--spacing);\n\t\tmargin-inline: 0;\n\n\t\t&,\n\t\tul,\n\t\tli {\n\t\t\tposition: relative;\n\t\t\tlist-style: none;\n\t\t\tlist-style: none;\n\t\t}\n\t\t\n\t\tul {\n\t\t\tmargin-left: var(--spacing);\n\t\t}\n\n\t\t&::before, \n\t\tul::before {\n\t\t\tcontent: \"\";\n\t\t\tdisplay: block;\n\t\t\twidth: var(--border-width);\n\t\t\theight: 100%;\n\t\t\tbackground-color: var(--backdrop-color);\n\t\t\tposition: absolute;\n\n\t\t\ttop: 0;\n\t\t\tleft: calc(var(--spacing) * -1);\n\t\t}\n\t}\n\n\t& > .page-list > .page-item > .page-item__body {\n\t\tpadding-inline: 0;\n\t}\n\n\t.page-item {\n\t\tmargin: 0;\n\t\t\n\t\t&__body {\n\t\t\tposition: relative;\n\t\t\t// padding: var(--spacing);\n\t\t\t// padding-right: 0;\n\t\t\tmargin: var(--spacing) 0;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tbackground-color: var(--backdrop-color);\n\n\t\t\ta {\n\t\t\t\tfont-weight: 800;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\t&::before {\n\t\t\t\tcontent: \"\";\n\t\t\t\tdisplay: block;\n\t\t\t\n\t\t\t\twidth: calc(var(--spacing) * 1);\n\t\t\t\theight: var(--border-width);\n\t\t\t\n\t\t\t\tbackground-color: var(--backdrop-color);\n\t\t\t\tposition: absolute;\n\t\t\t\n\t\t\t\ttop: 50%;\n\t\t\t\tleft: calc(var(--spacing) * -1);\n\t\t\t}\n\t\t}\n\n\t\t&__actions {\n\t\t\tdisplay: flex;\n\t\t\tgap: var(--spacing-400);\n\t\t}\n\t}\n}", ".sidebar {\n\tflex: 1 1 100%;\n\tbackground: lightblue;\n\tmax-width: 20rem;\n\n\t&__wrapper {\n\t\tdisplay: flex;\n\t\tflex: 1 1 100%;\n\t}\n}", ".icon-link {\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 1ch;\n\t\n\tsvg {\n\t\theight: 1lh;\n\t\tpadding: 0;\n\t}\t\n}\n\na.icon-link:not(.button) {\n\tgap: 0.5ch;\n\t\n\tsvg {\n\t\theight: 1em;\n\t}\n}"],
  "mappings": "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",
  "names": []
}
